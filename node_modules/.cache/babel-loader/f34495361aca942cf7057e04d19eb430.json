{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Workspace/Dustbin.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setWidgetsList } from \"../../redux/actions/app_action\";\nimport ImgMenu from \"../../components/WidgetsToolBar/images/menu-icon.png\";\nimport ResizibleImg from \"../../components/WidgetsToolBar/images/resizible.png\";\nimport styled from \"styled-components\";\nimport Grid from \"../../images/grid.png\"; // DND\n\nimport { useDrop } from \"react-dnd\";\nimport ResizePanel from \"react-resize-panel\";\nimport Draggable from \"react-draggable\"; // LODASH\n\nimport get from \"lodash/get\";\nimport { makeResizableDiv } from \"./helpers/makeResizibleDiv\";\nconst DnDBox = styled.div`\n  width: 95%;\n  margin: 0 60px 0 0;\n  height: calc(100vh - 60px);\n  display: flex;\n  flex-flow: nowrap column;\n  overflow: hidden;\n\n  .react-draggable,\n  .cursor {\n    cursor: move;\n  }\n  .no-cursor {\n    cursor: auto;\n  }\n  .cursor-y {\n    cursor: ns-resize;\n  }\n  .cursor-x {\n    cursor: ew-resize;\n  }\n\n  .box {\n    min-height: 200px;\n    min-width: 200px;\n    float: left;\n    z-index: 999;\n\n    &:hover {\n      cursor: default;\n    }\n\n    //&::-webkit-resizer {\n    //}\n  }\n\n  .handle-style {\n    display: none;\n  }\n\n  .footer {\n    height: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: stretch;\n    text-align: center;\n    justify-content: flex-start;\n    overflow: hidden;\n  }\n\n  .body {\n    flex-grow: 2;\n    min-height: 500px;\n    display: flex;\n    flex-flow: row nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n  }\n\n  .sidebar {\n    background: #fff;\n    min-width: 800px;\n    min-height: 500px;\n    width: 100%;\n    box-sizing: border-box;\n    text-align: center;\n    flex-grow: 1;\n    border: 1px solid #ccc;\n    border-radius: 2px;\n    //resize: both;\n    //overflow: auto;\n  }\n\n  .withMargin {\n    margin: 10px;\n    box-sizing: border-box;\n  }\n\n  .content {\n    flex-grow: 2;\n  }\n\n  .wg-info {\n    text-align: center;\n    padding: 10px;\n    background: #fff;\n  }\n\n  .close-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    border: 1px solid #ccc;\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      transition: 0.3s;\n      background: #4da6ff;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n  .remove-btn {\n    margin: 5px 0 0 0;\n    padding: 5px;\n    border: none;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      color: crimson;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .resizible-btn {\n    position: absolute;\n    height: 50px;\n    width: 50px;\n    background: #fff url(${ResizibleImg}) no-repeat center;\n    background-size: 50%;\n    border-radius: 50%;\n    left: -10px;\n    top: -10px;\n    z-index: 100;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: move;\n      background: #4da6ff url(${ResizibleImg}) no-repeat center;\n      background-size: 50%;\n      transform: rotate(360deg);\n    }\n  }\n\n  body,\n  html {\n    background: black;\n  }\n  .resizable {\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 100px;\n    left: 100px;\n  }\n\n  .resizable .resizers {\n    width: 100%;\n    height: 100%;\n    border: 3px dashed #4286f4;\n    box-sizing: border-box;\n  }\n\n  .resizable .resizers .resizer {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: white;\n    border: 3px solid #4286f4;\n    position: absolute;\n    z-index: 1000;\n  }\n\n  .resizable .resizers .resizer.top-right {\n    right: -5px;\n    top: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-left {\n    left: -5px;\n    bottom: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-right {\n    right: -5px;\n    bottom: -5px;\n    cursor: nwse-resize;\n  }\n`;\nconst WgMainBox = styled.div`\n  min-height: 100%;\n  min-width: 100%;\n\n  .wg-menu {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 40px;\n    height: 40px;\n    border-bottom-left-radius: 20%;\n    z-index: 20;\n    background: #ccc url(${ImgMenu}) no-repeat center;\n    background-size: 60%;\n    transition: 0.3s;\n\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      background: #4da6ff url(${ImgMenu}) no-repeat center;\n      background-size: 60%;\n    }\n  }\n`;\nconst WgMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n  min-height: 140px;\n  padding: 10px;\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n  background: #fff;\n  position: absolute;\n  z-index: 100;\n  top: 20px;\n  right: -80px;\n\n  .input {\n    margin: 0 0 10px 0;\n  }\n`;\n\nconst WidgetMenu = ({\n  widget,\n  setIsWgMwnuOpen,\n  setCurrentWidgetState,\n  currentWidgetState\n}) => {\n  const state = useSelector(state => state.app);\n  const {\n    widgetsList\n  } = state;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(WgMenu, {\n    onMouseDown: e => {\n      e.stopPropagation();\n      setCurrentWidgetState({ ...currentWidgetState,\n        draggable: false\n      });\n    },\n    className: \"wg-menu-bar\",\n    onMouseOver: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: e => {\n      e.stopPropagation();\n      setCurrentWidgetState({ ...currentWidgetState,\n        draggable: false\n      });\n    },\n    className: \"close-btn\",\n    onClick: () => {\n      setIsWgMwnuOpen(false);\n      setCurrentWidgetState({ ...currentWidgetState,\n        isMenuOpen: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, \"X\"), widget.name, \" \", get(widget, \"clone\") && \"(Clone)\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"remove-btn\",\n    onClick: () => {\n      dispatch(setWidgetsList(widgetsList.filter(w => (w === null || w === void 0 ? void 0 : w.id) !== (widget === null || widget === void 0 ? void 0 : widget.id))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }, \"Remove \", widget.name), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"remove-btn\",\n    onClick: () => {\n      setIsWgMwnuOpen(false);\n      setCurrentWidgetState({ ...currentWidgetState,\n        isMenuOpen: false\n      });\n      dispatch(setWidgetsList([...widgetsList, {\n        id: new Date().getTime(),\n        name: widget.name,\n        top: 20,\n        left: 20,\n        clone: true,\n        draggable: false\n      }]));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }, \"Clone\"));\n};\n\nconst WgBox = ({\n  widget,\n  currentWidgetState,\n  setCurrentWidgetState\n}) => {\n  const [isWgMenuOpen, setIsWgMwnuOpen] = useState(false);\n  let currentWidget = document.getElementById(`${widget === null || widget === void 0 ? void 0 : widget.id}`);\n  const state = useSelector(state => state.app);\n  const {\n    widgetsList\n  } = state;\n  const dispatch = useDispatch();\n  makeResizableDiv(`.${widget.name}_${widget.id}_resizable`);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WgMainBox, {\n    className: \"resizers\",\n    id: widget === null || widget === void 0 ? void 0 : widget.id,\n    style: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\",\n      background: `rgba(255,255,255,0.9) url(${require(`../WidgetsToolBar/images/${widget.name}.png`)}) no-repeat center`\n    },\n    onMouseOver: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      setCurrentWidgetState({ ...currentWidgetState,\n        isActive: true,\n        name: widget.name,\n        draggable: false,\n        id: widget.id\n      });\n      dispatch(setWidgetsList(widgetsList.map(w => {\n        return w.id === widget.id ? { ...w,\n          size: {\n            sizing: {\n              height: currentWidget ? currentWidget.offsetHeight : 200,\n              width: currentWidget ? currentWidget.offsetWidth : 200\n            }\n          }\n        } : w;\n      })));\n    },\n    onMouseLeave: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      dispatch(setWidgetsList(widgetsList.map(w => {\n        return w.id === widget.id ? { ...w,\n          height: currentWidget ? currentWidget.offsetHeight : 200,\n          width: currentWidget ? currentWidget.offsetWidth : 200\n        } : w;\n      })));\n      setCurrentWidgetState({ ...currentWidgetState,\n        isActive: false,\n        name: null,\n        draggable: true,\n        id: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, (currentWidgetState === null || currentWidgetState === void 0 ? void 0 : currentWidgetState.isActive) && (currentWidgetState === null || currentWidgetState === void 0 ? void 0 : currentWidgetState.id) === widget.id && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wg-menu\",\n    onClick: e => {\n      e.stopPropagation();\n      setIsWgMwnuOpen(!isWgMenuOpen);\n      setCurrentWidgetState({ ...currentWidgetState,\n        draggable: false,\n        isMenuOpen: !isWgMenuOpen\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"100%\",\n      justifyContent: \"center\",\n      position: \"absolute\",\n      bottom: \"5px\",\n      fontSize: \"14px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      margin: \"0 10px 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 11\n    }\n  }, \"H: \", currentWidget ? currentWidget.offsetHeight : widget === null || widget === void 0 ? void 0 : widget.height, \"px\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 11\n    }\n  }, \"W: \", currentWidget ? currentWidget.offsetWidth : widget === null || widget === void 0 ? void 0 : widget.width, \"px\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resizer top-right\",\n    onMouseMove: e => {\n      e.stopPropagation();\n      setCurrentWidgetState({ ...currentWidgetState,\n        draggable: false\n      });\n    },\n    onMouseOver: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resizer bottom-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resizer bottom-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  })), isWgMenuOpen && /*#__PURE__*/React.createElement(WidgetMenu, {\n    widget: widget,\n    setIsWgMwnuOpen: setIsWgMwnuOpen,\n    setCurrentWidgetState: setCurrentWidgetState,\n    currentWidgetState: currentWidgetState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport const Dustbin = () => {\n  const [currentWidgetState, setCurrentWidgetState] = useState({\n    isActive: false,\n    name: null,\n    draggable: true,\n    isMenuOpen: false\n  });\n  const state = useSelector(state => state.app);\n  const {\n    widgetsList\n  } = state;\n  console.log(widgetsList, \"LIST\");\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop({\n    accept: \"box\",\n\n    drop(item, monitor) {\n      return {\n        name: \"Dustbin\"\n      };\n    },\n\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = canDrop && isOver;\n  let background = `url(${Grid})`;\n\n  if (isActive) {\n    background = `lightskyblue url(${Grid})`;\n  } else if (canDrop) {\n    background = `lightgreen url(${Grid})`;\n  }\n\n  const [activeDrags, setActiveDrags] = useState(0);\n\n  function onStart() {\n    return currentWidgetState === null || currentWidgetState === void 0 ? void 0 : currentWidgetState.draggable;\n  }\n\n  function onStop() {\n    setActiveDrags(activeDrags);\n  }\n\n  const dragHandlers = {\n    onStart,\n    onStop\n  };\n  return /*#__PURE__*/React.createElement(DnDBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ResizePanel, {\n    direction: \"e\",\n    handleClass: \"handle-style\",\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar withMargin\",\n    ref: drop,\n    style: {\n      background,\n      position: \"relative\",\n      overflow: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 11\n    }\n  }, widgetsList.map(w => {\n    return /*#__PURE__*/React.createElement(Draggable, Object.assign({\n      key: w.id,\n      bounds: \"parent\"\n    }, dragHandlers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onMouseOver: () => {\n        setCurrentWidgetState({ ...currentWidgetState,\n          draggable: false,\n          isActive: true,\n          id: w.id\n        });\n      },\n      className: `box resizable ${w.name}_${w.id}_resizable`,\n      style: {\n        position: \"absolute\",\n        left: `${w === null || w === void 0 ? void 0 : w.left}px`,\n        top: `${w === null || w === void 0 ? void 0 : w.top}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onMouseOver: e => {\n        e.stopPropagation();\n        setCurrentWidgetState({ ...currentWidgetState,\n          draggable: true\n        });\n      },\n      className: \"resizible-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(WgBox, {\n      widget: w,\n      setCurrentWidgetState: setCurrentWidgetState,\n      currentWidgetState: currentWidgetState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 21\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ResizePanel, {\n    handleClass: \"handle-style\",\n    direction: \"n\",\n    style: {\n      height: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Workspace/Dustbin.js"],"names":["React","useState","useDispatch","useSelector","setWidgetsList","ImgMenu","ResizibleImg","styled","Grid","useDrop","ResizePanel","Draggable","get","makeResizableDiv","DnDBox","div","WgMainBox","WgMenu","WidgetMenu","widget","setIsWgMwnuOpen","setCurrentWidgetState","currentWidgetState","state","app","widgetsList","dispatch","e","stopPropagation","draggable","isMenuOpen","name","filter","w","id","Date","getTime","top","left","clone","WgBox","isWgMenuOpen","currentWidget","document","getElementById","position","width","height","background","require","preventDefault","isActive","map","size","sizing","offsetHeight","offsetWidth","display","justifyContent","bottom","fontSize","margin","Dustbin","console","log","canDrop","isOver","drop","accept","item","monitor","collect","activeDrags","setActiveDrags","onStart","onStop","dragHandlers","flexGrow","overflow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setWidgetsList } from \"../../redux/actions/app_action\";\n\nimport ImgMenu from \"../../components/WidgetsToolBar/images/menu-icon.png\";\nimport ResizibleImg from \"../../components/WidgetsToolBar/images/resizible.png\";\n\nimport styled from \"styled-components\";\n\nimport Grid from \"../../images/grid.png\";\n\n// DND\n\nimport { useDrop } from \"react-dnd\";\nimport ResizePanel from \"react-resize-panel\";\nimport Draggable from \"react-draggable\";\n\n// LODASH\n\nimport get from \"lodash/get\";\nimport { makeResizableDiv } from \"./helpers/makeResizibleDiv\";\n\nconst DnDBox = styled.div`\n  width: 95%;\n  margin: 0 60px 0 0;\n  height: calc(100vh - 60px);\n  display: flex;\n  flex-flow: nowrap column;\n  overflow: hidden;\n\n  .react-draggable,\n  .cursor {\n    cursor: move;\n  }\n  .no-cursor {\n    cursor: auto;\n  }\n  .cursor-y {\n    cursor: ns-resize;\n  }\n  .cursor-x {\n    cursor: ew-resize;\n  }\n\n  .box {\n    min-height: 200px;\n    min-width: 200px;\n    float: left;\n    z-index: 999;\n\n    &:hover {\n      cursor: default;\n    }\n\n    //&::-webkit-resizer {\n    //}\n  }\n\n  .handle-style {\n    display: none;\n  }\n\n  .footer {\n    height: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: stretch;\n    text-align: center;\n    justify-content: flex-start;\n    overflow: hidden;\n  }\n\n  .body {\n    flex-grow: 2;\n    min-height: 500px;\n    display: flex;\n    flex-flow: row nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n  }\n\n  .sidebar {\n    background: #fff;\n    min-width: 800px;\n    min-height: 500px;\n    width: 100%;\n    box-sizing: border-box;\n    text-align: center;\n    flex-grow: 1;\n    border: 1px solid #ccc;\n    border-radius: 2px;\n    //resize: both;\n    //overflow: auto;\n  }\n\n  .withMargin {\n    margin: 10px;\n    box-sizing: border-box;\n  }\n\n  .content {\n    flex-grow: 2;\n  }\n\n  .wg-info {\n    text-align: center;\n    padding: 10px;\n    background: #fff;\n  }\n\n  .close-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    border: 1px solid #ccc;\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      transition: 0.3s;\n      background: #4da6ff;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n  .remove-btn {\n    margin: 5px 0 0 0;\n    padding: 5px;\n    border: none;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      color: crimson;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .resizible-btn {\n    position: absolute;\n    height: 50px;\n    width: 50px;\n    background: #fff url(${ResizibleImg}) no-repeat center;\n    background-size: 50%;\n    border-radius: 50%;\n    left: -10px;\n    top: -10px;\n    z-index: 100;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: move;\n      background: #4da6ff url(${ResizibleImg}) no-repeat center;\n      background-size: 50%;\n      transform: rotate(360deg);\n    }\n  }\n\n  body,\n  html {\n    background: black;\n  }\n  .resizable {\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 100px;\n    left: 100px;\n  }\n\n  .resizable .resizers {\n    width: 100%;\n    height: 100%;\n    border: 3px dashed #4286f4;\n    box-sizing: border-box;\n  }\n\n  .resizable .resizers .resizer {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: white;\n    border: 3px solid #4286f4;\n    position: absolute;\n    z-index: 1000;\n  }\n\n  .resizable .resizers .resizer.top-right {\n    right: -5px;\n    top: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-left {\n    left: -5px;\n    bottom: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-right {\n    right: -5px;\n    bottom: -5px;\n    cursor: nwse-resize;\n  }\n`;\n\nconst WgMainBox = styled.div`\n  min-height: 100%;\n  min-width: 100%;\n\n  .wg-menu {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 40px;\n    height: 40px;\n    border-bottom-left-radius: 20%;\n    z-index: 20;\n    background: #ccc url(${ImgMenu}) no-repeat center;\n    background-size: 60%;\n    transition: 0.3s;\n\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      background: #4da6ff url(${ImgMenu}) no-repeat center;\n      background-size: 60%;\n    }\n  }\n`;\n\nconst WgMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n  min-height: 140px;\n  padding: 10px;\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n  background: #fff;\n  position: absolute;\n  z-index: 100;\n  top: 20px;\n  right: -80px;\n\n  .input {\n    margin: 0 0 10px 0;\n  }\n`;\n\nconst WidgetMenu = ({\n  widget,\n  setIsWgMwnuOpen,\n  setCurrentWidgetState,\n  currentWidgetState,\n}) => {\n  const state = useSelector((state) => state.app);\n  const { widgetsList } = state;\n  const dispatch = useDispatch();\n\n  return (\n    <WgMenu\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setCurrentWidgetState({\n          ...currentWidgetState,\n          draggable: false,\n        });\n      }}\n      className=\"wg-menu-bar\"\n      onMouseOver={(e) => e.stopPropagation()}\n    >\n      <div\n        onMouseDown={(e) => {\n          e.stopPropagation();\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            draggable: false,\n          });\n        }}\n        className=\"close-btn\"\n        onClick={() => {\n          setIsWgMwnuOpen(false);\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            isMenuOpen: false,\n          });\n        }}\n      >\n        X\n      </div>\n      {widget.name} {get(widget, \"clone\") && \"(Clone)\"}\n      <button\n        className=\"remove-btn\"\n        onClick={() => {\n          dispatch(\n            setWidgetsList(widgetsList.filter((w) => w?.id !== widget?.id))\n          );\n        }}\n      >\n        Remove {widget.name}\n      </button>\n      <button\n        className=\"remove-btn\"\n        onClick={() => {\n          setIsWgMwnuOpen(false);\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            isMenuOpen: false,\n          });\n\n          dispatch(\n            setWidgetsList([\n              ...widgetsList,\n              {\n                id: new Date().getTime(),\n                name: widget.name,\n                top: 20,\n                left: 20,\n                clone: true,\n                draggable: false,\n              },\n            ])\n          );\n        }}\n      >\n        Clone\n      </button>\n    </WgMenu>\n  );\n};\n\nconst WgBox = ({ widget, currentWidgetState, setCurrentWidgetState }) => {\n  const [isWgMenuOpen, setIsWgMwnuOpen] = useState(false);\n\n  let currentWidget = document.getElementById(`${widget?.id}`);\n\n  const state = useSelector((state) => state.app);\n  const { widgetsList } = state;\n  const dispatch = useDispatch();\n\n  makeResizableDiv(`.${widget.name}_${widget.id}_resizable`);\n\n  return (\n    <>\n      <WgMainBox\n        className=\"resizers\"\n        id={widget?.id}\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          background: `rgba(255,255,255,0.9) url(${require(`../WidgetsToolBar/images/${widget.name}.png`)}) no-repeat center`,\n        }}\n        onMouseOver={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            isActive: true,\n            name: widget.name,\n            draggable: false,\n            id: widget.id,\n          });\n\n          dispatch(\n            setWidgetsList(\n              widgetsList.map((w) => {\n                return w.id === widget.id\n                  ? {\n                      ...w,\n                      size: {\n                        sizing: {\n                          height: currentWidget\n                            ? currentWidget.offsetHeight\n                            : 200,\n                          width: currentWidget\n                            ? currentWidget.offsetWidth\n                            : 200,\n                        },\n                      },\n                    }\n                  : w;\n              })\n            )\n          );\n        }}\n        onMouseLeave={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          dispatch(\n            setWidgetsList(\n              widgetsList.map((w) => {\n                return w.id === widget.id\n                  ? {\n                      ...w,\n                      height: currentWidget ? currentWidget.offsetHeight : 200,\n                      width: currentWidget ? currentWidget.offsetWidth : 200,\n                    }\n                  : w;\n              })\n            )\n          );\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            isActive: false,\n            name: null,\n            draggable: true,\n            id: null,\n          });\n        }}\n      >\n        {currentWidgetState?.isActive && currentWidgetState?.id === widget.id && (\n          <div\n            className=\"wg-menu\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setIsWgMwnuOpen(!isWgMenuOpen);\n\n              setCurrentWidgetState({\n                ...currentWidgetState,\n                draggable: false,\n                isMenuOpen: !isWgMenuOpen,\n              });\n            }}\n          />\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"center\",\n            position: \"absolute\",\n            bottom: \"5px\",\n            fontSize: \"14px\",\n          }}\n        >\n          <span style={{ margin: \"0 10px 0 0\" }}>\n            H: {currentWidget ? currentWidget.offsetHeight : widget?.height}px\n          </span>\n          <span>\n            W: {currentWidget ? currentWidget.offsetWidth : widget?.width}px\n          </span>\n        </div>\n        <div\n          className=\"resizer top-right\"\n          onMouseMove={(e) => {\n            e.stopPropagation();\n            setCurrentWidgetState({\n              ...currentWidgetState,\n              draggable: false,\n            });\n          }}\n          onMouseOver={(e) => e.stopPropagation()}\n        />\n        <div className=\"resizer bottom-left\" />\n        <div className=\"resizer bottom-right\" />\n      </WgMainBox>\n      {isWgMenuOpen && (\n        <WidgetMenu\n          widget={widget}\n          setIsWgMwnuOpen={setIsWgMwnuOpen}\n          setCurrentWidgetState={setCurrentWidgetState}\n          currentWidgetState={currentWidgetState}\n        />\n      )}\n    </>\n  );\n};\n\nexport const Dustbin = () => {\n  const [currentWidgetState, setCurrentWidgetState] = useState({\n    isActive: false,\n    name: null,\n    draggable: true,\n    isMenuOpen: false,\n  });\n\n  const state = useSelector((state) => state.app);\n  const { widgetsList } = state;\n\n  console.log(widgetsList, \"LIST\");\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"box\",\n    drop(item, monitor) {\n      return { name: \"Dustbin\" };\n    },\n\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const isActive = canDrop && isOver;\n  let background = `url(${Grid})`;\n  if (isActive) {\n    background = `lightskyblue url(${Grid})`;\n  } else if (canDrop) {\n    background = `lightgreen url(${Grid})`;\n  }\n\n  const [activeDrags, setActiveDrags] = useState(0);\n\n  function onStart() {\n    return currentWidgetState?.draggable;\n  }\n\n  function onStop() {\n    setActiveDrags(activeDrags);\n  }\n\n  const dragHandlers = { onStart, onStop };\n\n  return (\n    <DnDBox>\n      <div className=\"body\">\n        <ResizePanel\n          direction=\"e\"\n          handleClass=\"handle-style\"\n          style={{ flexGrow: 1 }}\n        >\n          <div\n            className=\"sidebar withMargin\"\n            ref={drop}\n            style={{\n              background,\n              position: \"relative\",\n              overflow: \"auto\",\n            }}\n          >\n            {/*<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">*/}\n            {/*  <defs>*/}\n            {/*    <pattern*/}\n            {/*      id=\"smallGrid\"*/}\n            {/*      width=\"6\"*/}\n            {/*      height=\"6\"*/}\n            {/*      patternUnits=\"userSpaceOnUse\"*/}\n            {/*    >*/}\n            {/*      <path*/}\n            {/*        d=\"M 8 0 L 0 0 0 8\"*/}\n            {/*        fill=\"none\"*/}\n            {/*        stroke=\"gray\"*/}\n            {/*        stroke-width=\"0.5\"*/}\n            {/*      />*/}\n            {/*    </pattern>*/}\n            {/*    <pattern*/}\n            {/*      id=\"grid\"*/}\n            {/*      width=\"60\"*/}\n            {/*      height=\"60\"*/}\n            {/*      patternUnits=\"userSpaceOnUse\"*/}\n            {/*    >*/}\n            {/*      <rect width=\"60\" height=\"60\" fill=\"url(#smallGrid)\" />*/}\n            {/*      <path*/}\n            {/*        d=\"M 60 0 L 0 0 0 60\"*/}\n            {/*        fill=\"none\"*/}\n            {/*        stroke=\"gray\"*/}\n            {/*        stroke-width=\"1\"*/}\n            {/*      />*/}\n            {/*    </pattern>*/}\n            {/*  </defs>*/}\n\n            {/*  <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />*/}\n            {/*</svg>*/}\n\n            {widgetsList.map((w) => {\n              return (\n                <Draggable key={w.id} bounds=\"parent\" {...dragHandlers}>\n                  <div\n                    onMouseOver={() => {\n                      setCurrentWidgetState({\n                        ...currentWidgetState,\n                        draggable: false,\n                        isActive: true,\n                        id: w.id,\n                      });\n                    }}\n                    className={`box resizable ${w.name}_${w.id}_resizable`}\n                    style={{\n                      position: \"absolute\",\n                      left: `${w?.left}px`,\n                      top: `${w?.top}px`,\n                    }}\n                  >\n                    <div\n                      onMouseOver={(e) => {\n                        e.stopPropagation();\n                        setCurrentWidgetState({\n                          ...currentWidgetState,\n                          draggable: true,\n                        });\n                      }}\n                      className=\"resizible-btn\"\n                    />\n\n                    <WgBox\n                      widget={w}\n                      setCurrentWidgetState={setCurrentWidgetState}\n                      currentWidgetState={currentWidgetState}\n                    />\n                  </div>\n                </Draggable>\n              );\n            })}\n          </div>\n        </ResizePanel>\n\n        <div className=\"content\" />\n      </div>\n\n      <ResizePanel\n        handleClass=\"handle-style\"\n        direction=\"n\"\n        style={{ height: \"100px\" }}\n      >\n        <div className=\"footer\" />\n      </ResizePanel>\n    </DnDBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}