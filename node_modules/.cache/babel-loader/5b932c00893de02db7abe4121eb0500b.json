{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarParameters/SideBarParameters.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setReportParameters } from \"../../../redux/actions/app_action\";\nimport { AnimatedComponent } from \"../../views/AnimatedComponent\";\nimport styled from \"styled-components\"; // MATERIAL UI\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\"; // LODASH\n\nimport isEmpty from \"lodash/isEmpty\";\nimport NewParameters from \"./NewParameters\";\nconst DataSetListCont = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  flex: 1;\n  margin: 0 10px 20px 15px;\n  font-size: 20px;\n  padding: 10px;\n  box-shadow: 0 3px 3px -2px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  transition: 0.3s;\n  background: #fff;\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 3px 3px -2px rgba(0, 0, 0, 0.2),\n      0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n    transition: 0.3s;\n  }\n`;\n\nconst SideBarParameters = () => {\n  const [editParametersSetId, setEditParametersSetId] = useState(null);\n  const state = useSelector(state => state.app);\n  const {\n    parameters\n  } = state;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(AnimatedComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, parameters ? \"Parameters List\" : \"New Parameters\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxHeight: \"70vh\",\n      overflow: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, !isEmpty(parameters) && parameters.map((d, i) => {\n    if (editParametersSetId === d.id) {\n      return /*#__PURE__*/React.createElement(NewParameters, {\n        key: d.id,\n        editedParametersSet: d,\n        isHiddenControlBtn: true,\n        setEditParametersSetId: setEditParametersSetId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      });\n    }\n\n    return !editParametersSetId && /*#__PURE__*/React.createElement(DataSetListCont, {\n      key: d.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        margin: \"0 0 5px 0\",\n        fontWeight: 600\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, d.parametersSetName)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      component: \"span\",\n      onClick: () => {\n        setEditParametersSetId(d.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => {\n        dispatch(setReportParameters(parameters === null || parameters === void 0 ? void 0 : parameters.filter(dataSet => dataSet.id !== d.id)));\n      },\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }))));\n  })), !editParametersSetId && /*#__PURE__*/React.createElement(NewParameters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 34\n    }\n  })));\n};\n\nexport default SideBarParameters;","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarParameters/SideBarParameters.js"],"names":["React","useState","useDispatch","useSelector","setReportParameters","AnimatedComponent","styled","IconButton","DeleteIcon","EditIcon","isEmpty","NewParameters","DataSetListCont","div","SideBarParameters","editParametersSetId","setEditParametersSetId","state","app","parameters","dispatch","textAlign","maxHeight","overflow","map","d","i","id","display","flexDirection","margin","fontWeight","parametersSetName","filter","dataSet"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setReportParameters } from \"../../../redux/actions/app_action\";\nimport { AnimatedComponent } from \"../../views/AnimatedComponent\";\n\nimport styled from \"styled-components\";\n\n// MATERIAL UI\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n// LODASH\n\nimport isEmpty from \"lodash/isEmpty\";\nimport NewParameters from \"./NewParameters\";\n\nconst DataSetListCont = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  flex: 1;\n  margin: 0 10px 20px 15px;\n  font-size: 20px;\n  padding: 10px;\n  box-shadow: 0 3px 3px -2px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  transition: 0.3s;\n  background: #fff;\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 3px 3px -2px rgba(0, 0, 0, 0.2),\n      0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n    transition: 0.3s;\n  }\n`;\n\nconst SideBarParameters = () => {\n  const [editParametersSetId, setEditParametersSetId] = useState(null);\n  const state = useSelector((state) => state.app);\n  const { parameters } = state;\n\n  const dispatch = useDispatch();\n\n  return (\n    <AnimatedComponent>\n      <h2 style={{ textAlign: \"center\" }}>\n        {parameters ? \"Parameters List\" : \"New Parameters\"}\n      </h2>\n\n      <>\n        <div style={{ maxHeight: \"70vh\", overflow: \"auto\" }}>\n          {!isEmpty(parameters) &&\n            parameters.map((d, i) => {\n              if (editParametersSetId === d.id) {\n                return (\n                  <NewParameters\n                    key={d.id}\n                    editedParametersSet={d}\n                    isHiddenControlBtn\n                    setEditParametersSetId={setEditParametersSetId}\n                  />\n                );\n              }\n\n              return (\n                !editParametersSetId && (\n                  <DataSetListCont key={d.id}>\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                      <span style={{ margin: \"0 0 5px 0\", fontWeight: 600 }}>\n                        {d.parametersSetName}\n                      </span>\n                    </div>\n                    <div>\n                      <IconButton\n                        component=\"span\"\n                        onClick={() => {\n                          setEditParametersSetId(d.id);\n                        }}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton\n                        onClick={() => {\n                          dispatch(\n                            setReportParameters(\n                              parameters?.filter(\n                                (dataSet) => dataSet.id !== d.id\n                              )\n                            )\n                          );\n                        }}\n                        component=\"span\"\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </div>\n                  </DataSetListCont>\n                )\n              );\n            })}\n        </div>\n        {!editParametersSetId && <NewParameters />}\n      </>\n    </AnimatedComponent>\n  );\n};\n\nexport default SideBarParameters;\n"]},"metadata":{},"sourceType":"module"}