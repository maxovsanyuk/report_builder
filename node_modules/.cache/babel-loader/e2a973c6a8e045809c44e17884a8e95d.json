{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarSettings/views/BackgroundImageComp.js\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport get from \"lodash/get\";\nimport { setSettings } from \"../../../../redux/actions/app_action\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst BackgroundImageComp = () => {\n  const [currentState, setCurrentState] = useState({});\n  const state = useSelector(state => state.app);\n  const {\n    settings\n  } = state;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: \"10px 10px 20px 10px\",\n      margin: \"10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"15px 0 10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Background Image\"), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"source-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Source\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"source\",\n    value: get(currentState, \"backgroundImage.source\") || get(settings, \"reportSettings.backgroundImage.source\"),\n    onChange: e => {\n      var _settings$reportSetti;\n\n      setCurrentState({ ...currentState,\n        backgroundImage: { ...(currentState === null || currentState === void 0 ? void 0 : currentState.basic),\n          source: e.target.value\n        }\n      });\n      dispatch(setSettings({ ...settings,\n        reportSettings: { ...(settings === null || settings === void 0 ? void 0 : settings.reportSettings),\n          backgroundImage: { ...(settings === null || settings === void 0 ? void 0 : (_settings$reportSetti = settings.reportSettings) === null || _settings$reportSetti === void 0 ? void 0 : _settings$reportSetti.backgroundImage),\n            source: e.target.value\n          }\n        }\n      }));\n    },\n    style: {\n      width: \"100px\",\n      maxWidth: \"100px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    required: true,\n    inputProps: {\n      id: \"source-label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, [\"External\", \"Embedded\", \"Dynamics 365\"].map(i => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: i,\n      value: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, i);\n  }))), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"180px\",\n      margin: \"0 20px 0 20px\"\n    },\n    label: \"Value\",\n    name: \"Value\",\n    value: get(currentState, \"backgroundImage.value\") || get(settings, \"reportSettings.backgroundImage.value\"),\n    onChange: e => {\n      var _settings$reportSetti2;\n\n      setCurrentState({ ...currentState,\n        backgroundImage: { ...(currentState === null || currentState === void 0 ? void 0 : currentState.basic),\n          value: e.target.value\n        }\n      });\n      dispatch(setSettings({ ...settings,\n        reportSettings: { ...(settings === null || settings === void 0 ? void 0 : settings.reportSettings),\n          backgroundImage: { ...(settings === null || settings === void 0 ? void 0 : (_settings$reportSetti2 = settings.reportSettings) === null || _settings$reportSetti2 === void 0 ? void 0 : _settings$reportSetti2.backgroundImage),\n            value: e.target.value\n          }\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"source-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Repeat\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"repeat\",\n    value: get(currentState, \"backgroundImage.repeat\") || get(settings, \"reportSettings.backgroundImage.repeat\"),\n    onChange: e => {\n      var _settings$reportSetti3;\n\n      setCurrentState({ ...currentState,\n        backgroundImage: { ...(currentState === null || currentState === void 0 ? void 0 : currentState.basic),\n          repeat: e.target.value\n        }\n      });\n      dispatch(setSettings({ ...settings,\n        reportSettings: { ...(settings === null || settings === void 0 ? void 0 : settings.reportSettings),\n          backgroundImage: { ...(settings === null || settings === void 0 ? void 0 : (_settings$reportSetti3 = settings.reportSettings) === null || _settings$reportSetti3 === void 0 ? void 0 : _settings$reportSetti3.backgroundImage),\n            repeat: e.target.value\n          }\n        }\n      }));\n    },\n    style: {\n      width: \"100px\"\n    },\n    required: true,\n    inputProps: {\n      id: \"source-label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, [\"Default\", \"Repeat\", \"RepeatX\", \"RepeatY\", \"Clip\", \"Fit\"].map(i => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: i,\n      value: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, i);\n  }))));\n};\n\nexport default BackgroundImageComp;","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarSettings/views/BackgroundImageComp.js"],"names":["FormControl","InputLabel","Select","get","setSettings","MenuItem","TextField","Paper","React","useState","useDispatch","useSelector","BackgroundImageComp","currentState","setCurrentState","state","app","settings","dispatch","padding","margin","textAlign","e","backgroundImage","basic","source","target","value","reportSettings","width","maxWidth","overflow","textOverflow","whiteSpace","id","map","i","repeat"],"mappings":"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","sourcesContent":["import FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport get from \"lodash/get\";\nimport { setSettings } from \"../../../../redux/actions/app_action\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst BackgroundImageComp = () => {\n  const [currentState, setCurrentState] = useState({});\n\n  const state = useSelector((state) => state.app);\n  const { settings } = state;\n  const dispatch = useDispatch();\n\n  return (\n    <Paper style={{ padding: \"10px 10px 20px 10px\", margin: \"10px 0\" }}>\n      <h3 style={{ textAlign: \"center\", margin: \"15px 0 10px 0\" }}>\n        Background Image\n      </h3>\n      <FormControl>\n        <InputLabel htmlFor=\"source-label\">Source</InputLabel>\n\n        <Select\n          name=\"source\"\n          value={\n            get(currentState, \"backgroundImage.source\") ||\n            get(settings, \"reportSettings.backgroundImage.source\")\n          }\n          onChange={(e) => {\n            setCurrentState({\n              ...currentState,\n              backgroundImage: {\n                ...currentState?.basic,\n                source: e.target.value,\n              },\n            });\n\n            dispatch(\n              setSettings({\n                ...settings,\n                reportSettings: {\n                  ...settings?.reportSettings,\n                  backgroundImage: {\n                    ...settings?.reportSettings?.backgroundImage,\n                    source: e.target.value,\n                  },\n                },\n              })\n            );\n          }}\n          style={{\n            width: \"100px\",\n            maxWidth: \"100px\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          }}\n          required\n          inputProps={{\n            id: \"source-label\",\n          }}\n        >\n          {[\"External\", \"Embedded\", \"Dynamics 365\"].map((i) => {\n            return (\n              <MenuItem key={i} value={i}>\n                {i}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <TextField\n        style={{\n          width: \"180px\",\n          margin: \"0 20px 0 20px\",\n        }}\n        label=\"Value\"\n        name=\"Value\"\n        value={\n          get(currentState, \"backgroundImage.value\") ||\n          get(settings, \"reportSettings.backgroundImage.value\")\n        }\n        onChange={(e) => {\n          setCurrentState({\n            ...currentState,\n            backgroundImage: {\n              ...currentState?.basic,\n              value: e.target.value,\n            },\n          });\n\n          dispatch(\n            setSettings({\n              ...settings,\n              reportSettings: {\n                ...settings?.reportSettings,\n                backgroundImage: {\n                  ...settings?.reportSettings?.backgroundImage,\n                  value: e.target.value,\n                },\n              },\n            })\n          );\n        }}\n      />\n      <FormControl>\n        <InputLabel htmlFor=\"source-label\">Repeat</InputLabel>\n\n        <Select\n          name=\"repeat\"\n          value={\n            get(currentState, \"backgroundImage.repeat\") ||\n            get(settings, \"reportSettings.backgroundImage.repeat\")\n          }\n          onChange={(e) => {\n            setCurrentState({\n              ...currentState,\n              backgroundImage: {\n                ...currentState?.basic,\n                repeat: e.target.value,\n              },\n            });\n\n            dispatch(\n              setSettings({\n                ...settings,\n                reportSettings: {\n                  ...settings?.reportSettings,\n                  backgroundImage: {\n                    ...settings?.reportSettings?.backgroundImage,\n                    repeat: e.target.value,\n                  },\n                },\n              })\n            );\n          }}\n          style={{ width: \"100px\" }}\n          required\n          inputProps={{\n            id: \"source-label\",\n          }}\n        >\n          {[\"Default\", \"Repeat\", \"RepeatX\", \"RepeatY\", \"Clip\", \"Fit\"].map(\n            (i) => {\n              return (\n                <MenuItem key={i} value={i}>\n                  {i}\n                </MenuItem>\n              );\n            }\n          )}\n        </Select>\n      </FormControl>\n    </Paper>\n  );\n};\n\nexport default BackgroundImageComp;\n"]},"metadata":{},"sourceType":"module"}