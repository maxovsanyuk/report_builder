{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Workspace/Dustbin.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings, setWidgetsList } from \"../../redux/actions/app_action\";\nimport ImgMenu from \"../../components/WidgetsToolBar/images/menu-icon.png\";\nimport ResizibleImg from \"../../components/WidgetsToolBar/images/resizible.png\";\nimport styled from \"styled-components\";\nimport Grid from \"../../images/grid.png\"; // DND\n\nimport { useDrop } from \"react-dnd\";\nimport Draggable from \"react-draggable\";\nimport ReactResizeDetector from \"react-resize-detector\"; // LODASH\n\nimport get from \"lodash/get\";\nimport { makeResizableDiv } from \"./helpers/makeResizibleDiv\";\nconst DnDBox = styled.div`\n  width: 95%;\n  margin: 0 60px 0 0;\n  height: calc(100vh - 60px);\n  display: flex;\n  flex-flow: nowrap column;\n  overflow: hidden;\n\n  .react-draggable,\n  .cursor {\n    cursor: move;\n  }\n  .no-cursor {\n    cursor: auto;\n  }\n  .cursor-y {\n    cursor: ns-resize;\n  }\n  .cursor-x {\n    cursor: ew-resize;\n  }\n\n  .box {\n    min-height: 200px;\n    min-width: 200px;\n    float: left;\n    z-index: 999;\n\n    &:hover {\n      cursor: default;\n    }\n\n    //&::-webkit-resizer {\n    //}\n  }\n\n  .sidebar {\n    background: ${({\n  reportSettings\n}) => {\n  var _reportSettings$basic, _reportSettings$basic2;\n\n  return `${reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic = reportSettings.basic) === null || _reportSettings$basic === void 0 ? void 0 : (_reportSettings$basic2 = _reportSettings$basic.backgroundColor) === null || _reportSettings$basic2 === void 0 ? void 0 : _reportSettings$basic2.hex}!important`;\n}};\n    width: ${({\n  reportSettings\n}) => {\n  var _reportSettings$posit;\n\n  return `${reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$posit = reportSettings.position) === null || _reportSettings$posit === void 0 ? void 0 : _reportSettings$posit.width}px`;\n}};\n    height: ${({\n  reportSettings\n}) => {\n  var _reportSettings$posit2;\n\n  return `${reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$posit2 = reportSettings.position) === null || _reportSettings$posit2 === void 0 ? void 0 : _reportSettings$posit2.height}px`;\n}};\n    text-align: center;\n    border: ${({\n  reportSettings\n}) => {\n  var _reportSettings$basic3, _reportSettings$basic4, _reportSettings$basic5;\n\n  return `2px ${(reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic3 = reportSettings.basic) === null || _reportSettings$basic3 === void 0 ? void 0 : _reportSettings$basic3.border) || \"solid\"} ${(reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic4 = reportSettings.basic) === null || _reportSettings$basic4 === void 0 ? void 0 : (_reportSettings$basic5 = _reportSettings$basic4.color) === null || _reportSettings$basic5 === void 0 ? void 0 : _reportSettings$basic5.hex) || \"#ccc\"}`;\n}};\n    border-radius: 2px;\n    position: relative;\n    min-width: 600px;\n    min-height: 600px;\n    z-index: 1000;\n    resize: both;\n    overflow: auto;\n  }\n\n  .withMargin {\n    margin: 10px;\n    box-sizing: border-box;\n  }\n\n  .content {\n    flex-grow: 2;\n  }\n\n  .wg-info {\n    text-align: center;\n    padding: 10px;\n    background: #fff;\n  }\n\n  .close-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    border: 1px solid #ccc;\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      transition: 0.3s;\n      background: #4da6ff;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n  .remove-btn {\n    margin: 5px 0 0 0;\n    padding: 5px;\n    border: none;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      color: crimson;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .resizible-btn {\n    position: absolute;\n    height: 50px;\n    width: 50px;\n    background: #fff url(${ResizibleImg}) no-repeat center;\n    background-size: 50%;\n    border-radius: 50%;\n    left: -10px;\n    top: -10px;\n    z-index: 100;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: move;\n      background: #4da6ff url(${ResizibleImg}) no-repeat center;\n      background-size: 50%;\n      transform: rotate(360deg);\n    }\n  }\n\n  body,\n  html {\n    background: black;\n  }\n  .resizable {\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 100px;\n    left: 100px;\n  }\n\n  .resizable .resizers {\n    width: 100%;\n    height: 100%;\n    border: 3px dashed #4286f4;\n    box-sizing: border-box;\n  }\n\n  .resizable .resizers .resizer {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: white;\n    border: 3px solid #4286f4;\n    position: absolute;\n    z-index: 1000;\n  }\n\n  .resizable .resizers .resizer.top-right {\n    right: -5px;\n    top: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-left {\n    left: -5px;\n    bottom: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-right {\n    right: -5px;\n    bottom: -5px;\n    cursor: nwse-resize;\n  }\n`;\nconst WgMainBox = styled.div`\n  min-height: 100%;\n  min-width: 100%;\n\n  .wg-menu {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 40px;\n    height: 40px;\n    border-bottom-left-radius: 20%;\n    z-index: 20;\n    background: #ccc url(${ImgMenu}) no-repeat center;\n    background-size: 60%;\n    transition: 0.3s;\n\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      background: #4da6ff url(${ImgMenu}) no-repeat center;\n      background-size: 60%;\n    }\n  }\n`;\nconst WgMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n  min-height: 140px;\n  padding: 10px;\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n  background: #fff;\n  position: absolute;\n  z-index: 100;\n  top: 20px;\n  right: -80px;\n\n  .input {\n    margin: 0 0 10px 0;\n  }\n`;\n\nconst WidgetMenu = ({\n  widget,\n  setIsWgMwnuOpen,\n  setCurrentWidgetState,\n  currentWidgetState\n}) => {\n  const state = useSelector(state => state.app);\n  const {\n    widgetsList\n  } = state;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(WgMenu, {\n    onMouseDown: e => {\n      e.stopPropagation();\n      setCurrentWidgetState({ ...currentWidgetState,\n        draggable: false\n      });\n    },\n    className: \"wg-menu-bar\",\n    onMouseOver: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: e => {\n      e.stopPropagation();\n      setCurrentWidgetState({ ...currentWidgetState,\n        draggable: false\n      });\n    },\n    className: \"close-btn\",\n    onClick: () => {\n      setIsWgMwnuOpen(false);\n      setCurrentWidgetState({ ...currentWidgetState,\n        isMenuOpen: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, \"X\"), widget.name, \" \", get(widget, \"clone\") && \"(Clone)\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"remove-btn\",\n    onClick: () => {\n      dispatch(setWidgetsList(widgetsList.filter(w => (w === null || w === void 0 ? void 0 : w.id) !== (widget === null || widget === void 0 ? void 0 : widget.id))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, \"Remove \", widget.name), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"remove-btn\",\n    onClick: () => {\n      setIsWgMwnuOpen(false);\n      setCurrentWidgetState({ ...currentWidgetState,\n        isMenuOpen: false\n      });\n      dispatch(setWidgetsList([...widgetsList, {\n        id: new Date().getTime(),\n        name: widget.name,\n        top: 20,\n        left: 20,\n        clone: true,\n        draggable: false\n      }]));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, \"Clone\"));\n};\n\nconst WgBox = ({\n  widget,\n  currentWidgetState,\n  setCurrentWidgetState\n}) => {\n  var _widget$size, _widget$size$sizing, _widget$size2, _widget$size2$sizing;\n\n  const [isWgMenuOpen, setIsWgMwnuOpen] = useState(false);\n  let currentWidget = document.getElementById(`${widget === null || widget === void 0 ? void 0 : widget.id}`);\n  const state = useSelector(state => state.app);\n  const {\n    widgetsList\n  } = state;\n  const dispatch = useDispatch();\n  makeResizableDiv(`.${widget.name}_${widget.id}_resizable`);\n  return /*#__PURE__*/React.createElement(ReactResizeDetector, {\n    onResize: (w, h) => {\n      dispatch(setWidgetsList(widgetsList.map(w => {\n        return w.id === widget.id ? { ...w,\n          size: {\n            sizing: {\n              height: currentWidget ? currentWidget.offsetHeight : 600,\n              width: currentWidget ? currentWidget.offsetWidth : 600\n            }\n          }\n        } : w;\n      })));\n      setCurrentWidgetState({ ...currentWidgetState,\n        isActive: false,\n        name: null,\n        draggable: true,\n        id: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WgMainBox, {\n    className: \"resizers\",\n    id: widget === null || widget === void 0 ? void 0 : widget.id,\n    style: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\",\n      background: `rgba(255,255,255,0.9) url(${require(`../WidgetsToolBar/images/${widget.name}.png`)}) no-repeat center`\n    },\n    onMouseOver: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      setCurrentWidgetState({ ...currentWidgetState,\n        isActive: true,\n        name: widget.name,\n        draggable: false,\n        id: widget.id\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, (currentWidgetState === null || currentWidgetState === void 0 ? void 0 : currentWidgetState.isActive) && (currentWidgetState === null || currentWidgetState === void 0 ? void 0 : currentWidgetState.id) === widget.id && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wg-menu\",\n    onClick: e => {\n      e.stopPropagation();\n      setIsWgMwnuOpen(!isWgMenuOpen);\n      setCurrentWidgetState({ ...currentWidgetState,\n        draggable: false,\n        isMenuOpen: !isWgMenuOpen\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"100%\",\n      justifyContent: \"center\",\n      position: \"absolute\",\n      bottom: \"5px\",\n      fontSize: \"14px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      margin: \"0 10px 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }\n  }, \"H:\", \" \", currentWidget ? currentWidget.offsetHeight : widget === null || widget === void 0 ? void 0 : (_widget$size = widget.size) === null || _widget$size === void 0 ? void 0 : (_widget$size$sizing = _widget$size.sizing) === null || _widget$size$sizing === void 0 ? void 0 : _widget$size$sizing.height, \"px\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }, \"W:\", \" \", currentWidget ? currentWidget.offsetWidth : widget === null || widget === void 0 ? void 0 : (_widget$size2 = widget.size) === null || _widget$size2 === void 0 ? void 0 : (_widget$size2$sizing = _widget$size2.sizing) === null || _widget$size2$sizing === void 0 ? void 0 : _widget$size2$sizing.width, \"px\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resizer top-right\",\n    onMouseMove: e => {\n      e.stopPropagation();\n      setCurrentWidgetState({ ...currentWidgetState,\n        draggable: false\n      });\n    },\n    onMouseOver: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resizer bottom-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resizer bottom-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }\n  })), isWgMenuOpen && /*#__PURE__*/React.createElement(WidgetMenu, {\n    widget: widget,\n    setIsWgMwnuOpen: setIsWgMwnuOpen,\n    setCurrentWidgetState: setCurrentWidgetState,\n    currentWidgetState: currentWidgetState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport const Dustbin = () => {\n  const [currentWidgetState, setCurrentWidgetState] = useState({\n    isActive: false,\n    name: null,\n    draggable: true,\n    isMenuOpen: false\n  });\n  const state = useSelector(state => state.app);\n  const {\n    widgetsList,\n    settings\n  } = state;\n  const {\n    reportSettings\n  } = settings;\n  console.log(settings, \"SS\");\n  const dispatch = useDispatch();\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop({\n    accept: \"box\",\n\n    drop(item, monitor) {\n      return {\n        name: \"Dustbin\"\n      };\n    },\n\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = canDrop && isOver;\n  let background = `url(${Grid})`;\n\n  if (isActive) {\n    background = `lightskyblue url(${Grid})`;\n  } else if (canDrop) {\n    background = `lightgreen url(${Grid})`;\n  }\n\n  const [activeDrags, setActiveDrags] = useState(0);\n\n  function onStart() {\n    return currentWidgetState === null || currentWidgetState === void 0 ? void 0 : currentWidgetState.draggable;\n  }\n\n  function onStop() {\n    setActiveDrags(activeDrags);\n  }\n\n  const dragHandlers = {\n    onStart,\n    onStop\n  };\n  return /*#__PURE__*/React.createElement(DnDBox, {\n    reportSettings: reportSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"fit-content\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactResizeDetector, {\n    handleWidth: true,\n    handleHeight: true,\n    onResize: (width, height) => dispatch(setSettings({ ...settings,\n      reportSettings: { ...settings.reportSettings,\n        position: { ...(settings === null || settings === void 0 ? void 0 : settings.position),\n          width,\n          height\n        }\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 9\n    }\n  }, ({\n    width,\n    height\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar withMargin\",\n      ref: drop,\n      style: {\n        background,\n        position: \"relative\",\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 15\n      }\n    }, `W:${get(settings, \"reportSettings.position.width\")} x H:${get(settings, \"reportSettings.position.height\")}`, widgetsList.map(w => {\n      return /*#__PURE__*/React.createElement(Draggable, Object.assign({\n        key: w.id,\n        bounds: \"parent\"\n      }, dragHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        onMouseOver: () => {\n          setCurrentWidgetState({ ...currentWidgetState,\n            draggable: false,\n            isActive: true,\n            id: w.id\n          });\n        },\n        className: `box resizable ${w.name}_${w.id}_resizable`,\n        style: {\n          position: \"absolute\",\n          left: `${w === null || w === void 0 ? void 0 : w.left}px`,\n          top: `${w === null || w === void 0 ? void 0 : w.top}px`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onMouseOver: e => {\n          e.stopPropagation();\n          setCurrentWidgetState({ ...currentWidgetState,\n            draggable: true\n          });\n        },\n        className: \"resizible-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(WgBox, {\n        widget: w,\n        setCurrentWidgetState: setCurrentWidgetState,\n        currentWidgetState: currentWidgetState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 25\n        }\n      })));\n    }));\n  })));\n};","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Workspace/Dustbin.js"],"names":["React","useState","useDispatch","useSelector","setSettings","setWidgetsList","ImgMenu","ResizibleImg","styled","Grid","useDrop","Draggable","ReactResizeDetector","get","makeResizableDiv","DnDBox","div","reportSettings","basic","backgroundColor","hex","position","width","height","border","color","WgMainBox","WgMenu","WidgetMenu","widget","setIsWgMwnuOpen","setCurrentWidgetState","currentWidgetState","state","app","widgetsList","dispatch","e","stopPropagation","draggable","isMenuOpen","name","filter","w","id","Date","getTime","top","left","clone","WgBox","isWgMenuOpen","currentWidget","document","getElementById","h","map","size","sizing","offsetHeight","offsetWidth","isActive","background","require","preventDefault","display","justifyContent","bottom","fontSize","margin","Dustbin","settings","console","log","canDrop","isOver","drop","accept","item","monitor","collect","activeDrags","setActiveDrags","onStart","onStop","dragHandlers","overflow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings, setWidgetsList } from \"../../redux/actions/app_action\";\n\nimport ImgMenu from \"../../components/WidgetsToolBar/images/menu-icon.png\";\nimport ResizibleImg from \"../../components/WidgetsToolBar/images/resizible.png\";\n\nimport styled from \"styled-components\";\n\nimport Grid from \"../../images/grid.png\";\n\n// DND\n\nimport { useDrop } from \"react-dnd\";\nimport Draggable from \"react-draggable\";\nimport ReactResizeDetector from \"react-resize-detector\";\n\n// LODASH\n\nimport get from \"lodash/get\";\nimport { makeResizableDiv } from \"./helpers/makeResizibleDiv\";\n\nconst DnDBox = styled.div`\n  width: 95%;\n  margin: 0 60px 0 0;\n  height: calc(100vh - 60px);\n  display: flex;\n  flex-flow: nowrap column;\n  overflow: hidden;\n\n  .react-draggable,\n  .cursor {\n    cursor: move;\n  }\n  .no-cursor {\n    cursor: auto;\n  }\n  .cursor-y {\n    cursor: ns-resize;\n  }\n  .cursor-x {\n    cursor: ew-resize;\n  }\n\n  .box {\n    min-height: 200px;\n    min-width: 200px;\n    float: left;\n    z-index: 999;\n\n    &:hover {\n      cursor: default;\n    }\n\n    //&::-webkit-resizer {\n    //}\n  }\n\n  .sidebar {\n    background: ${({ reportSettings }) =>\n      `${reportSettings?.basic?.backgroundColor?.hex}!important`};\n    width: ${({ reportSettings }) => `${reportSettings?.position?.width}px`};\n    height: ${({ reportSettings }) => `${reportSettings?.position?.height}px`};\n    text-align: center;\n    border: ${({ reportSettings }) =>\n      `2px ${reportSettings?.basic?.border || \"solid\"} ${\n        reportSettings?.basic?.color?.hex || \"#ccc\"\n      }`};\n    border-radius: 2px;\n    position: relative;\n    min-width: 600px;\n    min-height: 600px;\n    z-index: 1000;\n    resize: both;\n    overflow: auto;\n  }\n\n  .withMargin {\n    margin: 10px;\n    box-sizing: border-box;\n  }\n\n  .content {\n    flex-grow: 2;\n  }\n\n  .wg-info {\n    text-align: center;\n    padding: 10px;\n    background: #fff;\n  }\n\n  .close-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    border: 1px solid #ccc;\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      transition: 0.3s;\n      background: #4da6ff;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n  .remove-btn {\n    margin: 5px 0 0 0;\n    padding: 5px;\n    border: none;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      color: crimson;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .resizible-btn {\n    position: absolute;\n    height: 50px;\n    width: 50px;\n    background: #fff url(${ResizibleImg}) no-repeat center;\n    background-size: 50%;\n    border-radius: 50%;\n    left: -10px;\n    top: -10px;\n    z-index: 100;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: move;\n      background: #4da6ff url(${ResizibleImg}) no-repeat center;\n      background-size: 50%;\n      transform: rotate(360deg);\n    }\n  }\n\n  body,\n  html {\n    background: black;\n  }\n  .resizable {\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 100px;\n    left: 100px;\n  }\n\n  .resizable .resizers {\n    width: 100%;\n    height: 100%;\n    border: 3px dashed #4286f4;\n    box-sizing: border-box;\n  }\n\n  .resizable .resizers .resizer {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: white;\n    border: 3px solid #4286f4;\n    position: absolute;\n    z-index: 1000;\n  }\n\n  .resizable .resizers .resizer.top-right {\n    right: -5px;\n    top: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-left {\n    left: -5px;\n    bottom: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-right {\n    right: -5px;\n    bottom: -5px;\n    cursor: nwse-resize;\n  }\n`;\n\nconst WgMainBox = styled.div`\n  min-height: 100%;\n  min-width: 100%;\n\n  .wg-menu {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 40px;\n    height: 40px;\n    border-bottom-left-radius: 20%;\n    z-index: 20;\n    background: #ccc url(${ImgMenu}) no-repeat center;\n    background-size: 60%;\n    transition: 0.3s;\n\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      background: #4da6ff url(${ImgMenu}) no-repeat center;\n      background-size: 60%;\n    }\n  }\n`;\n\nconst WgMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n  min-height: 140px;\n  padding: 10px;\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n  background: #fff;\n  position: absolute;\n  z-index: 100;\n  top: 20px;\n  right: -80px;\n\n  .input {\n    margin: 0 0 10px 0;\n  }\n`;\n\nconst WidgetMenu = ({\n  widget,\n  setIsWgMwnuOpen,\n  setCurrentWidgetState,\n  currentWidgetState,\n}) => {\n  const state = useSelector((state) => state.app);\n  const { widgetsList } = state;\n  const dispatch = useDispatch();\n\n  return (\n    <WgMenu\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setCurrentWidgetState({\n          ...currentWidgetState,\n          draggable: false,\n        });\n      }}\n      className=\"wg-menu-bar\"\n      onMouseOver={(e) => e.stopPropagation()}\n    >\n      <div\n        onMouseDown={(e) => {\n          e.stopPropagation();\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            draggable: false,\n          });\n        }}\n        className=\"close-btn\"\n        onClick={() => {\n          setIsWgMwnuOpen(false);\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            isMenuOpen: false,\n          });\n        }}\n      >\n        X\n      </div>\n      {widget.name} {get(widget, \"clone\") && \"(Clone)\"}\n      <button\n        className=\"remove-btn\"\n        onClick={() => {\n          dispatch(\n            setWidgetsList(widgetsList.filter((w) => w?.id !== widget?.id))\n          );\n        }}\n      >\n        Remove {widget.name}\n      </button>\n      <button\n        className=\"remove-btn\"\n        onClick={() => {\n          setIsWgMwnuOpen(false);\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            isMenuOpen: false,\n          });\n\n          dispatch(\n            setWidgetsList([\n              ...widgetsList,\n              {\n                id: new Date().getTime(),\n                name: widget.name,\n                top: 20,\n                left: 20,\n                clone: true,\n                draggable: false,\n              },\n            ])\n          );\n        }}\n      >\n        Clone\n      </button>\n    </WgMenu>\n  );\n};\n\nconst WgBox = ({ widget, currentWidgetState, setCurrentWidgetState }) => {\n  const [isWgMenuOpen, setIsWgMwnuOpen] = useState(false);\n\n  let currentWidget = document.getElementById(`${widget?.id}`);\n\n  const state = useSelector((state) => state.app);\n  const { widgetsList } = state;\n  const dispatch = useDispatch();\n\n  makeResizableDiv(`.${widget.name}_${widget.id}_resizable`);\n\n  return (\n    <ReactResizeDetector\n      onResize={(w, h) => {\n        dispatch(\n          setWidgetsList(\n            widgetsList.map((w) => {\n              return w.id === widget.id\n                ? {\n                    ...w,\n                    size: {\n                      sizing: {\n                        height: currentWidget\n                          ? currentWidget.offsetHeight\n                          : 600,\n                        width: currentWidget ? currentWidget.offsetWidth : 600,\n                      },\n                    },\n                  }\n                : w;\n            })\n          )\n        );\n        setCurrentWidgetState({\n          ...currentWidgetState,\n          isActive: false,\n          name: null,\n          draggable: true,\n          id: null,\n        });\n      }}\n    >\n      <WgMainBox\n        className=\"resizers\"\n        id={widget?.id}\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          background: `rgba(255,255,255,0.9) url(${require(`../WidgetsToolBar/images/${widget.name}.png`)}) no-repeat center`,\n        }}\n        onMouseOver={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          setCurrentWidgetState({\n            ...currentWidgetState,\n            isActive: true,\n            name: widget.name,\n            draggable: false,\n            id: widget.id,\n          });\n        }}\n      >\n        {currentWidgetState?.isActive && currentWidgetState?.id === widget.id && (\n          <div\n            className=\"wg-menu\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setIsWgMwnuOpen(!isWgMenuOpen);\n\n              setCurrentWidgetState({\n                ...currentWidgetState,\n                draggable: false,\n                isMenuOpen: !isWgMenuOpen,\n              });\n            }}\n          />\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"center\",\n            position: \"absolute\",\n            bottom: \"5px\",\n            fontSize: \"14px\",\n          }}\n        >\n          <span style={{ margin: \"0 10px 0 0\" }}>\n            H:{\" \"}\n            {currentWidget\n              ? currentWidget.offsetHeight\n              : widget?.size?.sizing?.height}\n            px\n          </span>\n          <span>\n            W:{\" \"}\n            {currentWidget\n              ? currentWidget.offsetWidth\n              : widget?.size?.sizing?.width}\n            px\n          </span>\n        </div>\n        <div\n          className=\"resizer top-right\"\n          onMouseMove={(e) => {\n            e.stopPropagation();\n            setCurrentWidgetState({\n              ...currentWidgetState,\n              draggable: false,\n            });\n          }}\n          onMouseOver={(e) => e.stopPropagation()}\n        />\n        <div className=\"resizer bottom-left\" />\n        <div className=\"resizer bottom-right\" />\n      </WgMainBox>\n      {isWgMenuOpen && (\n        <WidgetMenu\n          widget={widget}\n          setIsWgMwnuOpen={setIsWgMwnuOpen}\n          setCurrentWidgetState={setCurrentWidgetState}\n          currentWidgetState={currentWidgetState}\n        />\n      )}\n    </ReactResizeDetector>\n  );\n};\n\nexport const Dustbin = () => {\n  const [currentWidgetState, setCurrentWidgetState] = useState({\n    isActive: false,\n    name: null,\n    draggable: true,\n    isMenuOpen: false,\n  });\n\n  const state = useSelector((state) => state.app);\n  const { widgetsList, settings } = state;\n  const { reportSettings } = settings;\n\n  console.log(settings, \"SS\");\n\n  const dispatch = useDispatch();\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"box\",\n    drop(item, monitor) {\n      return { name: \"Dustbin\" };\n    },\n\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const isActive = canDrop && isOver;\n  let background = `url(${Grid})`;\n  if (isActive) {\n    background = `lightskyblue url(${Grid})`;\n  } else if (canDrop) {\n    background = `lightgreen url(${Grid})`;\n  }\n\n  const [activeDrags, setActiveDrags] = useState(0);\n\n  function onStart() {\n    return currentWidgetState?.draggable;\n  }\n\n  function onStop() {\n    setActiveDrags(activeDrags);\n  }\n\n  const dragHandlers = { onStart, onStop };\n\n  return (\n    <DnDBox reportSettings={reportSettings}>\n      <div style={{ position: \"relative\", width: \"fit-content\" }}>\n        <ReactResizeDetector\n          handleWidth\n          handleHeight\n          onResize={(width, height) =>\n            dispatch(\n              setSettings({\n                ...settings,\n                reportSettings: {\n                  ...settings.reportSettings,\n                  position: {\n                    ...settings?.position,\n                    width,\n                    height,\n                  },\n                },\n              })\n            )\n          }\n        >\n          {({ width, height }) => {\n            return (\n              <div\n                className=\"sidebar withMargin\"\n                ref={drop}\n                style={{\n                  background,\n                  position: \"relative\",\n                  overflow: \"auto\",\n                }}\n              >\n                {`W:${get(settings, \"reportSettings.position.width\")} x H:${get(\n                  settings,\n                  \"reportSettings.position.height\"\n                )}`}\n                {/*<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">*/}\n                {/*  <defs>*/}\n                {/*    <pattern*/}\n                {/*      id=\"smallGrid\"*/}\n                {/*      width=\"6\"*/}\n                {/*      height=\"6\"*/}\n                {/*      patternUnits=\"userSpaceOnUse\"*/}\n                {/*    >*/}\n                {/*      <path*/}\n                {/*        d=\"M 8 0 L 0 0 0 8\"*/}\n                {/*        fill=\"none\"*/}\n                {/*        stroke=\"gray\"*/}\n                {/*        stroke-width=\"0.5\"*/}\n                {/*      />*/}\n                {/*    </pattern>*/}\n                {/*    <pattern*/}\n                {/*      id=\"grid\"*/}\n                {/*      width=\"60\"*/}\n                {/*      height=\"60\"*/}\n                {/*      patternUnits=\"userSpaceOnUse\"*/}\n                {/*    >*/}\n                {/*      <rect width=\"60\" height=\"60\" fill=\"url(#smallGrid)\" />*/}\n                {/*      <path*/}\n                {/*        d=\"M 60 0 L 0 0 0 60\"*/}\n                {/*        fill=\"none\"*/}\n                {/*        stroke=\"gray\"*/}\n                {/*        stroke-width=\"1\"*/}\n                {/*      />*/}\n                {/*    </pattern>*/}\n                {/*  </defs>*/}\n                {/*  <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />*/}\n                {/*</svg>*/}\n                {widgetsList.map((w) => {\n                  return (\n                    <Draggable key={w.id} bounds=\"parent\" {...dragHandlers}>\n                      <div\n                        onMouseOver={() => {\n                          setCurrentWidgetState({\n                            ...currentWidgetState,\n                            draggable: false,\n                            isActive: true,\n                            id: w.id,\n                          });\n                        }}\n                        className={`box resizable ${w.name}_${w.id}_resizable`}\n                        style={{\n                          position: \"absolute\",\n                          left: `${w?.left}px`,\n                          top: `${w?.top}px`,\n                        }}\n                      >\n                        <div\n                          onMouseOver={(e) => {\n                            e.stopPropagation();\n                            setCurrentWidgetState({\n                              ...currentWidgetState,\n                              draggable: true,\n                            });\n                          }}\n                          className=\"resizible-btn\"\n                        />\n\n                        <WgBox\n                          widget={w}\n                          setCurrentWidgetState={setCurrentWidgetState}\n                          currentWidgetState={currentWidgetState}\n                        />\n                      </div>\n                    </Draggable>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </ReactResizeDetector>\n      </div>\n    </DnDBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}