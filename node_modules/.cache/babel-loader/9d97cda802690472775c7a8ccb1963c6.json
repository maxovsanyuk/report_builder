{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarParameters/views/QueryValueRadioComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { setNewParametersSetState } from \"../../../../redux/actions/app_action\";\nimport styled from \"styled-components\"; // MATERIAL\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\"; // LODASH\n\nimport get from \"lodash/get\";\nconst QueryValueComponent = styled.div`\n  .btn-title {\n    font-size: 12px;\n    background: none;\n    border: none;\n    &:hover {\n      cursor: pointer;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .parameters-box {\n    width: 100%;\n    height: 250px;\n    margin: 10px 0 0 0;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    overflow: auto;\n  }\n\n  .add-btn {\n    border: none;\n    background: none;\n    color: red;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      color: blue;\n      transition: 0.3s;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst QueryValueRadioComponent = ({\n  dispatch,\n  newParametersSet,\n  name\n}) => {\n  const [queryValue, setQueryValue] = useState(get(newParametersSet, `${name}.queryValue.value`));\n  const [dataSetName, setDataSetName] = useState(get(newParametersSet, `${name}.dataSetName`));\n  const state = useSelector(state => state.app);\n  const {\n    dataSets\n  } = state;\n  const {\n    register\n  } = useForm();\n  useEffect(() => {\n    queryValue && dispatch(setNewParametersSetState({ ...newParametersSet,\n      [name]: { ...newParametersSet[name],\n        queryValue: { ...newParametersSet[name].queryValue,\n          value: queryValue\n        }\n      }\n    }));\n  }, [queryValue]);\n  return /*#__PURE__*/React.createElement(QueryValueComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"parameters-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      margin: \"20px 20px 10px 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: \"flex\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    register: register,\n    style: {\n      margin: \"10px 0 15px 15px\"\n    },\n    label: \"Query Value\",\n    name: \"DefaultValue\",\n    onChange: e => {\n      dispatch(setNewParametersSetState({ ...newParametersSet,\n        [name]: { ...newParametersSet[name],\n          queryValue: { ...newParametersSet[name].queryValue,\n            value: e.target.value\n          }\n        }\n      }));\n      setQueryValue(e.target.value);\n    },\n    value: queryValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }), dataSets.length ? /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      margin: \"0 0 0 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, \"Dataset\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"Dataset\",\n    inputRef: register,\n    value: dataSetName,\n    renderValue: () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxWidth: \"100px\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, dataSetName);\n    },\n    style: {\n      minWidth: \"100px\"\n    },\n    onChange: e => {\n      dispatch(setNewParametersSetState({ ...newParametersSet,\n        [name]: { ...newParametersSet[name],\n          dataSetName: e.target.value\n        }\n      }));\n      setDataSetName(e.target.value);\n    },\n    required: true,\n    inputProps: {\n      id: \"select-label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, dataSets.map(i => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: i.dataSetName,\n      value: i.dataSetName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, i.dataSetName);\n  }))) : null)))));\n};\n\nexport default QueryValueRadioComponent;","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarParameters/views/QueryValueRadioComponent.js"],"names":["React","useEffect","useState","useForm","useSelector","setNewParametersSetState","styled","FormControl","InputLabel","Select","MenuItem","Paper","TextField","get","QueryValueComponent","div","QueryValueRadioComponent","dispatch","newParametersSet","name","queryValue","setQueryValue","dataSetName","setDataSetName","state","app","dataSets","register","value","display","alignItems","justifyContent","margin","width","e","target","length","maxWidth","overflow","textOverflow","minWidth","id","map","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { setNewParametersSetState } from \"../../../../redux/actions/app_action\";\n\nimport styled from \"styled-components\";\n\n// MATERIAL\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// LODASH\n\nimport get from \"lodash/get\";\n\nconst QueryValueComponent = styled.div`\n  .btn-title {\n    font-size: 12px;\n    background: none;\n    border: none;\n    &:hover {\n      cursor: pointer;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .parameters-box {\n    width: 100%;\n    height: 250px;\n    margin: 10px 0 0 0;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    overflow: auto;\n  }\n\n  .add-btn {\n    border: none;\n    background: none;\n    color: red;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      color: blue;\n      transition: 0.3s;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst QueryValueRadioComponent = ({ dispatch, newParametersSet, name }) => {\n  const [queryValue, setQueryValue] = useState(\n    get(newParametersSet, `${name}.queryValue.value`)\n  );\n\n  const [dataSetName, setDataSetName] = useState(\n    get(newParametersSet, `${name}.dataSetName`)\n  );\n\n  const state = useSelector((state) => state.app);\n  const { dataSets } = state;\n\n  const { register } = useForm();\n\n  useEffect(() => {\n    queryValue &&\n      dispatch(\n        setNewParametersSetState({\n          ...newParametersSet,\n          [name]: {\n            ...newParametersSet[name],\n\n            queryValue: {\n              ...newParametersSet[name].queryValue,\n              value: queryValue,\n            },\n          },\n        })\n      );\n  }, [queryValue]);\n\n  return (\n    <QueryValueComponent>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div className=\"parameters-box\">\n          <Paper\n            style={{\n              margin: \"20px 20px 10px 20px\",\n            }}\n          >\n            <form\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n              }}\n            >\n              <TextField\n                required\n                register={register}\n                style={{\n                  margin: \"10px 0 15px 15px\",\n                }}\n                label=\"Query Value\"\n                name=\"DefaultValue\"\n                onChange={(e) => {\n                  dispatch(\n                    setNewParametersSetState({\n                      ...newParametersSet,\n                      [name]: {\n                        ...newParametersSet[name],\n\n                        queryValue: {\n                          ...newParametersSet[name].queryValue,\n                          value: e.target.value,\n                        },\n                      },\n                    })\n                  );\n                  setQueryValue(e.target.value);\n                }}\n                value={queryValue}\n              />\n              {dataSets.length ? (\n                <FormControl style={{ margin: \"0 0 0 20px\" }}>\n                  <InputLabel htmlFor=\"select-label\">Dataset</InputLabel>\n\n                  <Select\n                    name=\"Dataset\"\n                    inputRef={register}\n                    value={dataSetName}\n                    renderValue={() => {\n                      return (\n                        <div\n                          style={{\n                            maxWidth: \"100px\",\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                          }}\n                        >\n                          {dataSetName}\n                        </div>\n                      );\n                    }}\n                    style={{\n                      minWidth: \"100px\",\n                    }}\n                    onChange={(e) => {\n                      dispatch(\n                        setNewParametersSetState({\n                          ...newParametersSet,\n                          [name]: {\n                            ...newParametersSet[name],\n                            dataSetName: e.target.value,\n                          },\n                        })\n                      );\n                      setDataSetName(e.target.value);\n                    }}\n                    required\n                    inputProps={{\n                      id: \"select-label\",\n                    }}\n                  >\n                    {dataSets.map((i) => {\n                      return (\n                        <MenuItem key={i.dataSetName} value={i.dataSetName}>\n                          {i.dataSetName}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </FormControl>\n              ) : null}\n            </form>\n          </Paper>\n        </div>\n      </div>\n    </QueryValueComponent>\n  );\n};\n\nexport default QueryValueRadioComponent;\n"]},"metadata":{},"sourceType":"module"}