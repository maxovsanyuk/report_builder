{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarSettings/views/Dynamics365Settings.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../../../redux/actions/app_action\";\nimport styled from \"styled-components\"; // MATERIAL UI\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\"; // LODASH\n\nimport get from \"lodash/get\";\nimport range from \"lodash/range\";\nconst SettingsBox = styled.div`\n  width: calc(100% - 20px);\n  margin: 10px 0 0 0;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  padding: 10px;\n`;\nconst categories = [{\n  name: \"Administrative Reports\",\n  type: \"administrativeReports\"\n}, {\n  name: \"Marketing Reports\",\n  type: \"marketingReports\"\n}, {\n  name: \"Sales Reports\",\n  type: \"salesReports\"\n}, {\n  name: \"Service Reports\",\n  type: \"serviceReports\"\n}];\nconst displayIn = [{\n  name: \"Forms for related record types\",\n  type: \"formsForRelatedRecordTypes\"\n}, {\n  name: \"Lists for related record typ\",\n  type: \"listsForRelatedRecordTypes\"\n}, {\n  name: \"Reports area\",\n  type: \"reportsArea\"\n}];\n\nconst Dynamics365Settings = () => {\n  const [currentState, setCurrentState] = useState({});\n  const state = useSelector(state => state.app);\n  const {\n    settings\n  } = state;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(SettingsBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      padding: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"categories-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Categories\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"Categories\",\n    value: get(currentState, \"categories\") || get(settings, \"dynamics365Settings.categories\"),\n    onChange: e => {\n      setCurrentState({ ...currentState,\n        categories: e.target.value\n      });\n      dispatch(setSettings({ ...settings,\n        dynamics365Settings: { ...(settings === null || settings === void 0 ? void 0 : settings.dynamics365Settings),\n          categories: e.target.value\n        }\n      }));\n    },\n    style: {\n      width: \"100px\",\n      maxWidth: \"100px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    required: true,\n    inputProps: {\n      id: \"categories-label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, categories.map(({\n    name,\n    type\n  }) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: type,\n      value: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, name);\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      margin: \"0 0 0 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"relatedRecordTypes-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Related Record Types\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"Categories\",\n    value: get(currentState, \"relatedRecordTypes\") || get(settings, \"dynamics365Settings.relatedRecordTypes\"),\n    onChange: e => {\n      setCurrentState({ ...currentState,\n        relatedRecordTypes: e.target.value\n      });\n      dispatch(setSettings({ ...settings,\n        dynamics365Settings: { ...(settings === null || settings === void 0 ? void 0 : settings.dynamics365Settings),\n          relatedRecordTypes: e.target.value\n        }\n      }));\n    },\n    style: {\n      width: \"180px\",\n      maxWidth: \"180px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    required: true,\n    inputProps: {\n      id: \"relatedRecordTypes-label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, range(1, 6, 1).map(i => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: i,\n      value: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, i, \" item\");\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      margin: \"0 0 0 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"displayIn-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Display in\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"DisplayIn\",\n    value: get(currentState, \"displayIn\") || get(settings, \"dynamics365Settings.displayIn\"),\n    onChange: e => {\n      setCurrentState({ ...currentState,\n        displayIn: e.target.value\n      });\n      dispatch(setSettings({ ...settings,\n        dynamics365Settings: { ...(settings === null || settings === void 0 ? void 0 : settings.dynamics365Settings),\n          displayIn: e.target.value\n        }\n      }));\n    },\n    style: {\n      width: \"140px\",\n      maxWidth: \"140px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    required: true,\n    inputProps: {\n      id: \"displayIn-label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, displayIn.map(({\n    name,\n    type\n  }) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: type,\n      value: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, name);\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      margin: \"0 0 0 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"languages-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"Languages\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"Languages\",\n    value: get(currentState, \"languages\") || get(settings, \"dynamics365Settings.languages\"),\n    onChange: e => {\n      setCurrentState({ ...currentState,\n        languages: e.target.value\n      });\n      dispatch(setSettings({ ...settings,\n        dynamics365Settings: { ...(settings === null || settings === void 0 ? void 0 : settings.dynamics365Settings),\n          languages: e.target.value\n        }\n      }));\n    },\n    style: {\n      width: \"140px\",\n      maxWidth: \"140px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    required: true,\n    inputProps: {\n      id: \"languages-label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, [\"All languages\", \"EN\", \"PL\", \"DA\", \"RU\", \"IT\", \"UK\"].map(l => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: l,\n      value: l,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, l);\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"viewableBy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"Viewable By\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"viewableBy\",\n    value: get(currentState, \"viewableBy\") || get(settings, \"dynamics365Settings.viewableBy\"),\n    onChange: e => {\n      setCurrentState({ ...currentState,\n        viewableBy: e.target.value\n      });\n      dispatch(setSettings({ ...settings,\n        dynamics365Settings: { ...(settings === null || settings === void 0 ? void 0 : settings.dynamics365Settings),\n          viewableBy: e.target.value\n        }\n      }));\n    },\n    style: {\n      width: \"140px\",\n      maxWidth: \"140px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    required: true,\n    inputProps: {\n      id: \"viewableBy-label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, [\"Organization\", \"Individual\"].map(l => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: l,\n      value: l,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 19\n      }\n    }, l);\n  }))))));\n};\n\nexport default Dynamics365Settings;","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarSettings/views/Dynamics365Settings.js"],"names":["React","useState","useDispatch","useSelector","setSettings","styled","FormControl","InputLabel","Select","Paper","MenuItem","get","range","SettingsBox","div","categories","name","type","displayIn","Dynamics365Settings","currentState","setCurrentState","state","app","settings","dispatch","display","flexWrap","padding","e","target","value","dynamics365Settings","width","maxWidth","overflow","textOverflow","whiteSpace","id","map","margin","relatedRecordTypes","i","languages","l","viewableBy"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../../../redux/actions/app_action\";\n\nimport styled from \"styled-components\";\n\n// MATERIAL UI\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n// LODASH\n\nimport get from \"lodash/get\";\nimport range from \"lodash/range\";\n\nconst SettingsBox = styled.div`\n  width: calc(100% - 20px);\n  margin: 10px 0 0 0;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  padding: 10px;\n`;\n\nconst categories = [\n  { name: \"Administrative Reports\", type: \"administrativeReports\" },\n  { name: \"Marketing Reports\", type: \"marketingReports\" },\n  { name: \"Sales Reports\", type: \"salesReports\" },\n  { name: \"Service Reports\", type: \"serviceReports\" },\n];\n\nconst displayIn = [\n  {\n    name: \"Forms for related record types\",\n    type: \"formsForRelatedRecordTypes\",\n  },\n  { name: \"Lists for related record typ\", type: \"listsForRelatedRecordTypes\" },\n  { name: \"Reports area\", type: \"reportsArea\" },\n];\n\nconst Dynamics365Settings = () => {\n  const [currentState, setCurrentState] = useState({});\n\n  const state = useSelector((state) => state.app);\n  const { settings } = state;\n  const dispatch = useDispatch();\n\n  return (\n    <SettingsBox>\n      <Paper>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"15px\" }}>\n          <FormControl>\n            <InputLabel htmlFor=\"categories-label\">Categories</InputLabel>\n\n            <Select\n              name=\"Categories\"\n              value={\n                get(currentState, \"categories\") ||\n                get(settings, \"dynamics365Settings.categories\")\n              }\n              onChange={(e) => {\n                setCurrentState({\n                  ...currentState,\n                  categories: e.target.value,\n                });\n\n                dispatch(\n                  setSettings({\n                    ...settings,\n                    dynamics365Settings: {\n                      ...settings?.dynamics365Settings,\n                      categories: e.target.value,\n                    },\n                  })\n                );\n              }}\n              style={{\n                width: \"100px\",\n                maxWidth: \"100px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n              required\n              inputProps={{\n                id: \"categories-label\",\n              }}\n            >\n              {categories.map(({ name, type }) => {\n                return (\n                  <MenuItem key={type} value={type}>\n                    {name}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          <FormControl style={{ margin: \"0 0 0 20px\" }}>\n            <InputLabel htmlFor=\"relatedRecordTypes-label\">\n              Related Record Types\n            </InputLabel>\n\n            <Select\n              name=\"Categories\"\n              value={\n                get(currentState, \"relatedRecordTypes\") ||\n                get(settings, \"dynamics365Settings.relatedRecordTypes\")\n              }\n              onChange={(e) => {\n                setCurrentState({\n                  ...currentState,\n                  relatedRecordTypes: e.target.value,\n                });\n\n                dispatch(\n                  setSettings({\n                    ...settings,\n                    dynamics365Settings: {\n                      ...settings?.dynamics365Settings,\n                      relatedRecordTypes: e.target.value,\n                    },\n                  })\n                );\n              }}\n              style={{\n                width: \"180px\",\n                maxWidth: \"180px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n              required\n              inputProps={{\n                id: \"relatedRecordTypes-label\",\n              }}\n            >\n              {range(1, 6, 1).map((i) => {\n                return (\n                  <MenuItem key={i} value={i}>\n                    {i} item\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          <FormControl style={{ margin: \"0 0 0 20px\" }}>\n            <InputLabel htmlFor=\"displayIn-label\">Display in</InputLabel>\n\n            <Select\n              name=\"DisplayIn\"\n              value={\n                get(currentState, \"displayIn\") ||\n                get(settings, \"dynamics365Settings.displayIn\")\n              }\n              onChange={(e) => {\n                setCurrentState({\n                  ...currentState,\n                  displayIn: e.target.value,\n                });\n\n                dispatch(\n                  setSettings({\n                    ...settings,\n                    dynamics365Settings: {\n                      ...settings?.dynamics365Settings,\n                      displayIn: e.target.value,\n                    },\n                  })\n                );\n              }}\n              style={{\n                width: \"140px\",\n                maxWidth: \"140px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n              required\n              inputProps={{\n                id: \"displayIn-label\",\n              }}\n            >\n              {displayIn.map(({ name, type }) => {\n                return (\n                  <MenuItem key={type} value={type}>\n                    {name}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          <FormControl style={{ margin: \"0 0 0 20px\" }}>\n            <InputLabel htmlFor=\"languages-label\">Languages</InputLabel>\n\n            <Select\n              name=\"Languages\"\n              value={\n                get(currentState, \"languages\") ||\n                get(settings, \"dynamics365Settings.languages\")\n              }\n              onChange={(e) => {\n                setCurrentState({\n                  ...currentState,\n                  languages: e.target.value,\n                });\n\n                dispatch(\n                  setSettings({\n                    ...settings,\n                    dynamics365Settings: {\n                      ...settings?.dynamics365Settings,\n                      languages: e.target.value,\n                    },\n                  })\n                );\n              }}\n              style={{\n                width: \"140px\",\n                maxWidth: \"140px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n              required\n              inputProps={{\n                id: \"languages-label\",\n              }}\n            >\n              {[\"All languages\", \"EN\", \"PL\", \"DA\", \"RU\", \"IT\", \"UK\"].map(\n                (l) => {\n                  return (\n                    <MenuItem key={l} value={l}>\n                      {l}\n                    </MenuItem>\n                  );\n                }\n              )}\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel htmlFor=\"viewableBy-label\">Viewable By</InputLabel>\n\n            <Select\n              name=\"viewableBy\"\n              value={\n                get(currentState, \"viewableBy\") ||\n                get(settings, \"dynamics365Settings.viewableBy\")\n              }\n              onChange={(e) => {\n                setCurrentState({\n                  ...currentState,\n                  viewableBy: e.target.value,\n                });\n\n                dispatch(\n                  setSettings({\n                    ...settings,\n                    dynamics365Settings: {\n                      ...settings?.dynamics365Settings,\n                      viewableBy: e.target.value,\n                    },\n                  })\n                );\n              }}\n              style={{\n                width: \"140px\",\n                maxWidth: \"140px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n              required\n              inputProps={{\n                id: \"viewableBy-label\",\n              }}\n            >\n              {[\"Organization\", \"Individual\"].map((l) => {\n                return (\n                  <MenuItem key={l} value={l}>\n                    {l}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n      </Paper>\n    </SettingsBox>\n  );\n};\n\nexport default Dynamics365Settings;\n"]},"metadata":{},"sourceType":"module"}