{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarParameters/views/SpecifyRadioComponent.js\";\nimport styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useForm } from \"react-hook-form\";\nimport { setNewParametersSetState } from \"../../../../redux/actions/app_action\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nconst SpecifyComponent = styled.div`\n  .btn-title {\n    font-size: 12px;\n    background: none;\n    border: none;\n    &:hover {\n      cursor: pointer;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .parameters-box {\n    width: 100%;\n    height: 250px;\n    margin: 10px 0 0 0;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    overflow: auto;\n  }\n\n  .add-btn {\n    border: none;\n    background: none;\n    color: red;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      color: blue;\n      transition: 0.3s;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst SpecifyRadioComponent = ({\n  dispatch,\n  newParametersSet,\n  name\n}) => {\n  const [parametersList, setParametersList] = useState(get(newParametersSet, `${name}.specify.items`) ? newParametersSet[name].specify.items : []);\n  const [newList, setNewList] = useState({});\n  const [isFullForm, setIsfullForm] = useState(true);\n  const {\n    register\n  } = useForm();\n  useEffect(() => {\n    get(newList, \"value\") && get(newList, \"label\") && setIsfullForm(true);\n    get(newList, \"defaultValue\") && setIsfullForm(true);\n    isFullForm && get(newList, \"value\") && get(newList, \"label\") && dispatch(setNewParametersSetState({ ...newParametersSet,\n      [name]: { ...newParametersSet[name],\n        specify: { ...newParametersSet[name].specify,\n          items: parametersList\n        }\n      }\n    }));\n    isFullForm && get(newList, \"defaultValue\") && dispatch(setNewParametersSetState({ ...newParametersSet,\n      [name]: { ...newParametersSet[name],\n        specify: { ...newParametersSet[name].specify,\n          items: parametersList\n        }\n      }\n    }));\n  }, [get(newList, \"value\"), get(newList, \"label\"), get(newList, \"defaultValue\"), isFullForm, parametersList.length]);\n  return /*#__PURE__*/React.createElement(SpecifyComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Add the available values for the parameters:\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-btn\",\n    disabled: parametersList && parametersList.length && !isFullForm,\n    style: {\n      opacity: parametersList && parametersList.length && !isFullForm ? \".3\" : 1\n    },\n    onClick: () => {\n      setParametersList([...parametersList, {\n        id: new Date().getTime(),\n        value: \"\",\n        label: \"\"\n      }]);\n      setIsfullForm(false);\n      setNewList({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"+ ADD\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"parameters-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, parametersList.map(({\n    label,\n    value,\n    id\n  }) => {\n    return /*#__PURE__*/React.createElement(Paper, {\n      key: id,\n      style: {\n        margin: \"20px 20px 10px 20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, name === \"defaultValue\" && /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      register: register,\n      style: {\n        width: \"200px\",\n        margin: \"5px 0 15px 15px\"\n      },\n      label: \"Default Value\",\n      name: \"DefaultValue\",\n      onChange: e => {\n        setNewList({ ...newList,\n          defaultValue: e.target.value\n        });\n        setParametersList(parametersList.map(p => {\n          return p.id === id ? { ...p,\n            value: e.target.value\n          } : p;\n        }));\n        dispatch(setNewParametersSetState({ ...newParametersSet,\n          [name]: { ...newParametersSet[name],\n            specify: { ...newParametersSet[name].specify,\n              items: parametersList\n            }\n          }\n        }));\n      },\n      value: value || get(newList, \"value\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }), name === \"availableValue\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      register: register,\n      style: {\n        width: \"200px\",\n        margin: \"0 0 15px 15px\"\n      },\n      label: \"Value\",\n      name: \"value\",\n      onChange: e => {\n        setNewList({ ...newList,\n          value: e.target.value\n        });\n        setParametersList(parametersList.map(p => {\n          return p.id === id ? { ...p,\n            value: e.target.value\n          } : p;\n        }));\n        dispatch(setNewParametersSetState({ ...newParametersSet,\n          [name]: { ...newParametersSet[name],\n            specify: { ...newParametersSet[name].specify,\n              items: parametersList\n            }\n          }\n        }));\n      },\n      value: value || get(newList, \"value\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      register: register,\n      style: {\n        width: \"200px\",\n        margin: \"0 0 15px 15px\"\n      },\n      label: \"Label\",\n      name: \"label\",\n      onChange: e => {\n        setNewList({ ...newList,\n          label: e.target.value\n        });\n        setParametersList(parametersList.map(p => {\n          return p.id === id ? { ...p,\n            label: e.target.value\n          } : p;\n        }));\n      },\n      value: label || get(newList, \"lable\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      component: \"span\",\n      onClick: () => {\n        setParametersList(parametersList.filter(l => l.id !== id));\n        setIsfullForm(true);\n        dispatch(setNewParametersSetState({ ...newParametersSet,\n          [name]: { ...newParametersSet[name],\n            specify: { ...newParametersSet[name].specify,\n              items: parametersList.filter(l => l.id !== id)\n            }\n          }\n        }));\n      },\n      style: {\n        maxWidth: \"28px\",\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }))));\n  })));\n};\n\nexport default SpecifyRadioComponent;","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarParameters/views/SpecifyRadioComponent.js"],"names":["styled","React","useEffect","useState","get","useForm","setNewParametersSetState","Paper","TextField","IconButton","DeleteIcon","SpecifyComponent","div","SpecifyRadioComponent","dispatch","newParametersSet","name","parametersList","setParametersList","specify","items","newList","setNewList","isFullForm","setIsfullForm","register","length","display","alignItems","justifyContent","opacity","id","Date","getTime","value","label","map","margin","width","e","defaultValue","target","p","filter","l","maxWidth","marginRight"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useForm } from \"react-hook-form\";\nimport { setNewParametersSetState } from \"../../../../redux/actions/app_action\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst SpecifyComponent = styled.div`\n  .btn-title {\n    font-size: 12px;\n    background: none;\n    border: none;\n    &:hover {\n      cursor: pointer;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .parameters-box {\n    width: 100%;\n    height: 250px;\n    margin: 10px 0 0 0;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    overflow: auto;\n  }\n\n  .add-btn {\n    border: none;\n    background: none;\n    color: red;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      color: blue;\n      transition: 0.3s;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst SpecifyRadioComponent = ({ dispatch, newParametersSet, name }) => {\n  const [parametersList, setParametersList] = useState(\n    get(newParametersSet, `${name}.specify.items`)\n      ? newParametersSet[name].specify.items\n      : []\n  );\n\n  const [newList, setNewList] = useState({});\n  const [isFullForm, setIsfullForm] = useState(true);\n\n  const { register } = useForm();\n\n  useEffect(() => {\n    get(newList, \"value\") && get(newList, \"label\") && setIsfullForm(true);\n    get(newList, \"defaultValue\") && setIsfullForm(true);\n\n    isFullForm &&\n      get(newList, \"value\") &&\n      get(newList, \"label\") &&\n      dispatch(\n        setNewParametersSetState({\n          ...newParametersSet,\n          [name]: {\n            ...newParametersSet[name],\n            specify: {\n              ...newParametersSet[name].specify,\n              items: parametersList,\n            },\n          },\n        })\n      );\n\n    isFullForm &&\n      get(newList, \"defaultValue\") &&\n      dispatch(\n        setNewParametersSetState({\n          ...newParametersSet,\n          [name]: {\n            ...newParametersSet[name],\n            specify: {\n              ...newParametersSet[name].specify,\n              items: parametersList,\n            },\n          },\n        })\n      );\n  }, [\n    get(newList, \"value\"),\n    get(newList, \"label\"),\n    get(newList, \"defaultValue\"),\n    isFullForm,\n    parametersList.length,\n  ]);\n\n  return (\n    <SpecifyComponent>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <button className=\"btn-title\">\n          Add the available values for the parameters:\n        </button>\n        <button\n          className=\"add-btn\"\n          disabled={parametersList && parametersList.length && !isFullForm}\n          style={{\n            opacity:\n              parametersList && parametersList.length && !isFullForm ? \".3\" : 1,\n          }}\n          onClick={() => {\n            setParametersList([\n              ...parametersList,\n              { id: new Date().getTime(), value: \"\", label: \"\" },\n            ]);\n            setIsfullForm(false);\n            setNewList({});\n          }}\n        >\n          + ADD\n        </button>\n      </div>\n\n      <div className=\"parameters-box\">\n        {parametersList.map(({ label, value, id }) => {\n          return (\n            <Paper\n              key={id}\n              style={{\n                margin: \"20px 20px 10px 20px\",\n              }}\n            >\n              <form\n                style={{\n                  display: \"flex\",\n                  width: \"100%\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                {name === \"defaultValue\" && (\n                  <TextField\n                    required\n                    register={register}\n                    style={{\n                      width: \"200px\",\n                      margin: \"5px 0 15px 15px\",\n                    }}\n                    label=\"Default Value\"\n                    name=\"DefaultValue\"\n                    onChange={(e) => {\n                      setNewList({\n                        ...newList,\n                        defaultValue: e.target.value,\n                      });\n\n                      setParametersList(\n                        parametersList.map((p) => {\n                          return p.id === id\n                            ? { ...p, value: e.target.value }\n                            : p;\n                        })\n                      );\n\n                      dispatch(\n                        setNewParametersSetState({\n                          ...newParametersSet,\n                          [name]: {\n                            ...newParametersSet[name],\n                            specify: {\n                              ...newParametersSet[name].specify,\n                              items: parametersList,\n                            },\n                          },\n                        })\n                      );\n                    }}\n                    value={value || get(newList, \"value\")}\n                  />\n                )}\n\n                {name === \"availableValue\" && (\n                  <>\n                    <TextField\n                      required\n                      register={register}\n                      style={{\n                        width: \"200px\",\n                        margin: \"0 0 15px 15px\",\n                      }}\n                      label=\"Value\"\n                      name=\"value\"\n                      onChange={(e) => {\n                        setNewList({\n                          ...newList,\n                          value: e.target.value,\n                        });\n                        setParametersList(\n                          parametersList.map((p) => {\n                            return p.id === id\n                              ? { ...p, value: e.target.value }\n                              : p;\n                          })\n                        );\n\n                        dispatch(\n                          setNewParametersSetState({\n                            ...newParametersSet,\n                            [name]: {\n                              ...newParametersSet[name],\n                              specify: {\n                                ...newParametersSet[name].specify,\n                                items: parametersList,\n                              },\n                            },\n                          })\n                        );\n                      }}\n                      value={value || get(newList, \"value\")}\n                    />\n\n                    <TextField\n                      required\n                      register={register}\n                      style={{\n                        width: \"200px\",\n                        margin: \"0 0 15px 15px\",\n                      }}\n                      label=\"Label\"\n                      name=\"label\"\n                      onChange={(e) => {\n                        setNewList({\n                          ...newList,\n                          label: e.target.value,\n                        });\n                        setParametersList(\n                          parametersList.map((p) => {\n                            return p.id === id\n                              ? { ...p, label: e.target.value }\n                              : p;\n                          })\n                        );\n                      }}\n                      value={label || get(newList, \"lable\")}\n                    />\n                  </>\n                )}\n\n                <IconButton\n                  component=\"span\"\n                  onClick={() => {\n                    setParametersList(\n                      parametersList.filter((l) => l.id !== id)\n                    );\n                    setIsfullForm(true);\n\n                    dispatch(\n                      setNewParametersSetState({\n                        ...newParametersSet,\n                        [name]: {\n                          ...newParametersSet[name],\n                          specify: {\n                            ...newParametersSet[name].specify,\n                            items: parametersList.filter((l) => l.id !== id),\n                          },\n                        },\n                      })\n                    );\n                  }}\n                  style={{\n                    maxWidth: \"28px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </form>\n            </Paper>\n          );\n        })}\n      </div>\n    </SpecifyComponent>\n  );\n};\n\nexport default SpecifyRadioComponent;\n"]},"metadata":{},"sourceType":"module"}