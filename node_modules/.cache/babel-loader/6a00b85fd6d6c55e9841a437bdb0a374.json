{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarData/views/FilterForNewDataSet.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataSetFields } from \"../../../../services/get-fields\";\nimport FilterComponent from \"./FilterComponent\";\nimport { setLoading, setNewDataSetState } from \"../../../../redux/actions/app_action\";\nimport styled from \"styled-components\"; // material-ui\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\"; // LODASH\n// import isEmpty from \"lodash/isEmpty\";\n\nimport get from \"lodash/get\";\nimport FilterCombinedComponent from \"./FilterCombinedComponent\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CombinedFilters from \"./CombinedFilters\";\nconst CombinedFilter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  overflow: auto;\n\n  b {\n    text-transform: uppercase;\n    padding: 10px;\n    border: 1px dashed #ccc;\n    border-radius: 5px;\n    background: lightblue;\n    color: slategray;\n  }\n\n  .combined-filters-box {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    margin: 0 10px 0 20px;\n  }\n`;\n\nconst FilterForNewDataSet = ({\n  register,\n  control,\n  entitiState,\n  setEntitiState,\n  isFullEntitie,\n  filterData,\n  setIsFullEntitie\n}) => {\n  const [filterState, setFilterState] = useState({ ...filterData\n  });\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.app);\n  const {\n    newDataSet\n  } = state;\n  useEffect(() => {\n    setEntitiState({ ...entitiState,\n      filterChangedId: new Date().getTime(),\n      filtersList: get(entitiState, \"filtersList\") && (entitiState === null || entitiState === void 0 ? void 0 : entitiState.filtersList.map(f => {\n        return (f === null || f === void 0 ? void 0 : f.filterId) === (filterState === null || filterState === void 0 ? void 0 : filterState.filterId) ? { ...filterState\n        } : f;\n      }))\n    });\n    setIsFullEntitie(filterState.logicalType ? true : (filterState === null || filterState === void 0 ? void 0 : filterState.filterFieldType) && get(filterState, \"operatorType\") && filterState.operatorType.value && (filterState === null || filterState === void 0 ? void 0 : filterState.operatorValue) ? true : false);\n  }, [filterState.filterFieldType, filterState.operatorValue, filterState.checked, get(filterState, \"operatorType\") && filterState.operatorType.value]);\n  useEffect(() => {\n    async function getDataSet() {\n      dispatch(setLoading(true));\n\n      try {\n        var _newDataSet$entities, _entitiState$dataSetF, _entitiState$dataSetF2;\n\n        const dataSetFields = await getDataSetFields(get(filterState, \"filterFieldType.value\"));\n        dispatch(setNewDataSetState({ ...newDataSet,\n          entities: [...(newDataSet === null || newDataSet === void 0 ? void 0 : (_newDataSet$entities = newDataSet.entities) === null || _newDataSet$entities === void 0 ? void 0 : _newDataSet$entities.map(e => {\n            var _e$filtersList;\n\n            return { ...e,\n              filtersList: e === null || e === void 0 ? void 0 : (_e$filtersList = e.filtersList) === null || _e$filtersList === void 0 ? void 0 : _e$filtersList.filter(f => f.filterId !== (filterState === null || filterState === void 0 ? void 0 : filterState.filterId))\n            };\n          })), {\n            id: new Date().getTime(),\n            selectType: get(filterState, \"filterFieldType\"),\n            dataSetTypes: { ...(filterState === null || filterState === void 0 ? void 0 : filterState.dataSetFields),\n              items: entitiState === null || entitiState === void 0 ? void 0 : (_entitiState$dataSetF = entitiState.dataSetFields) === null || _entitiState$dataSetF === void 0 ? void 0 : (_entitiState$dataSetF2 = _entitiState$dataSetF.items) === null || _entitiState$dataSetF2 === void 0 ? void 0 : _entitiState$dataSetF2.filter(d => d.type === \"related\")\n            },\n            dataSetFields\n          }]\n        }));\n        dispatch(setLoading(false));\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n\n    if (get(filterState, \"filterFieldType.type\") === \"related\") {\n      var _entitiState$filtersL;\n\n      setEntitiState({ ...entitiState,\n        filtersList: entitiState === null || entitiState === void 0 ? void 0 : (_entitiState$filtersL = entitiState.filtersList) === null || _entitiState$filtersL === void 0 ? void 0 : _entitiState$filtersL.filter(f => (f === null || f === void 0 ? void 0 : f.filterId) !== (filterState === null || filterState === void 0 ? void 0 : filterState.filterId))\n      });\n      setIsFullEntitie(true);\n      getDataSet();\n    }\n  }, [get(filterState, \"filterFieldType.type\") === \"related\"]);\n\n  if (filterState.logicalType) {\n    var _entitiState$filtersL2, _filterState$items;\n\n    return /*#__PURE__*/React.createElement(CombinedFilter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, (entitiState === null || entitiState === void 0 ? void 0 : (_entitiState$filtersL2 = entitiState.filtersList) === null || _entitiState$filtersL2 === void 0 ? void 0 : _entitiState$filtersL2.length) > 1 && /*#__PURE__*/React.createElement(Checkbox, {\n      checked: filterState.checked,\n      disabled: !isFullEntitie || !(filterState === null || filterState === void 0 ? void 0 : filterState.checked) && (entitiState === null || entitiState === void 0 ? void 0 : entitiState.checkedFilters) > 1,\n      color: \"primary\",\n      inputProps: {\n        \"aria-label\": \"secondary checkbox\"\n      },\n      onChange: e => {\n        setFilterState({ ...filterState,\n          checked: e.target.checked\n        });\n        setEntitiState({ ...entitiState,\n          checkedFilters: get(entitiState, \"checkedFilters\") || entitiState.checkedFilters === 0 ? e.target.checked ? (entitiState === null || entitiState === void 0 ? void 0 : entitiState.checkedFilters) + 1 : (entitiState === null || entitiState === void 0 ? void 0 : entitiState.checkedFilters) - 1 : 1\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, filterState === null || filterState === void 0 ? void 0 : filterState.logicalType), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"combined-filters-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, filterState === null || filterState === void 0 ? void 0 : (_filterState$items = filterState.items) === null || _filterState$items === void 0 ? void 0 : _filterState$items.map(i => {\n      if (i.logicalType) {\n        return /*#__PURE__*/React.createElement(CombinedFilters, {\n          key: i.filterId,\n          entitiState: entitiState,\n          setFilterState: setFilterState,\n          filterState: i,\n          setIsFullEntitie: setIsFullEntitie,\n          setEntitiState: setEntitiState,\n          register: register,\n          control: control,\n          filterId: i.filterId,\n          filterData: filterData,\n          isFullEntitie: isFullEntitie,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(FilterCombinedComponent, {\n        key: i.filterId,\n        entitiState: entitiState,\n        setFilterState: setFilterState,\n        filterState: i,\n        setEntitiState: setEntitiState,\n        setIsFullEntitie: setIsFullEntitie,\n        register: register,\n        control: control,\n        filterId: i.filterId,\n        filterItems: filterState === null || filterState === void 0 ? void 0 : filterState.items,\n        filterData: filterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => {\n        var _entitiState$filtersL3;\n\n        setEntitiState({ ...entitiState,\n          filtersList: entitiState === null || entitiState === void 0 ? void 0 : (_entitiState$filtersL3 = entitiState.filtersList) === null || _entitiState$filtersL3 === void 0 ? void 0 : _entitiState$filtersL3.filter(f => (f === null || f === void 0 ? void 0 : f.filterId) !== (filterState === null || filterState === void 0 ? void 0 : filterState.filterId))\n        });\n        setIsFullEntitie(true);\n      },\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(FilterComponent, {\n    filterState: filterState,\n    entitiState: entitiState,\n    setFilterState: setFilterState,\n    setEntitiState: setEntitiState,\n    isFullEntitie: isFullEntitie,\n    setIsFullEntitie: setIsFullEntitie,\n    register: register,\n    control: control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default FilterForNewDataSet;","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarData/views/FilterForNewDataSet.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getDataSetFields","FilterComponent","setLoading","setNewDataSetState","styled","DeleteIcon","IconButton","get","FilterCombinedComponent","Checkbox","CombinedFilters","CombinedFilter","div","FilterForNewDataSet","register","control","entitiState","setEntitiState","isFullEntitie","filterData","setIsFullEntitie","filterState","setFilterState","dispatch","state","app","newDataSet","filterChangedId","Date","getTime","filtersList","map","f","filterId","logicalType","filterFieldType","operatorType","value","operatorValue","checked","getDataSet","dataSetFields","entities","e","filter","id","selectType","dataSetTypes","items","d","type","console","warn","length","checkedFilters","target","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getDataSetFields } from \"../../../../services/get-fields\";\nimport FilterComponent from \"./FilterComponent\";\n\nimport {\n  setLoading,\n  setNewDataSetState,\n} from \"../../../../redux/actions/app_action\";\n\nimport styled from \"styled-components\";\n\n// material-ui\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// LODASH\n\n// import isEmpty from \"lodash/isEmpty\";\nimport get from \"lodash/get\";\nimport FilterCombinedComponent from \"./FilterCombinedComponent\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CombinedFilters from \"./CombinedFilters\";\n\nconst CombinedFilter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  overflow: auto;\n\n  b {\n    text-transform: uppercase;\n    padding: 10px;\n    border: 1px dashed #ccc;\n    border-radius: 5px;\n    background: lightblue;\n    color: slategray;\n  }\n\n  .combined-filters-box {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    margin: 0 10px 0 20px;\n  }\n`;\n\nconst FilterForNewDataSet = ({\n  register,\n  control,\n  entitiState,\n  setEntitiState,\n  isFullEntitie,\n  filterData,\n  setIsFullEntitie,\n}) => {\n  const [filterState, setFilterState] = useState({ ...filterData });\n  const dispatch = useDispatch();\n\n  const state = useSelector((state) => state.app);\n  const { newDataSet } = state;\n\n  useEffect(() => {\n    setEntitiState({\n      ...entitiState,\n      filterChangedId: new Date().getTime(),\n\n      filtersList:\n        get(entitiState, \"filtersList\") &&\n        entitiState?.filtersList.map((f) => {\n          return f?.filterId === filterState?.filterId ? { ...filterState } : f;\n        }),\n    });\n\n    setIsFullEntitie(\n      filterState.logicalType\n        ? true\n        : filterState?.filterFieldType &&\n          get(filterState, \"operatorType\") &&\n          filterState.operatorType.value &&\n          filterState?.operatorValue\n        ? true\n        : false\n    );\n  }, [\n    filterState.filterFieldType,\n    filterState.operatorValue,\n    filterState.checked,\n    get(filterState, \"operatorType\") && filterState.operatorType.value,\n  ]);\n\n  useEffect(() => {\n    async function getDataSet() {\n      dispatch(setLoading(true));\n      try {\n        const dataSetFields = await getDataSetFields(\n          get(filterState, \"filterFieldType.value\")\n        );\n\n        dispatch(\n          setNewDataSetState({\n            ...newDataSet,\n            entities: [\n              ...newDataSet?.entities?.map((e) => {\n                return {\n                  ...e,\n                  filtersList: e?.filtersList?.filter(\n                    (f) => f.filterId !== filterState?.filterId\n                  ),\n                };\n              }),\n              {\n                id: new Date().getTime(),\n                selectType: get(filterState, \"filterFieldType\"),\n                dataSetTypes: {\n                  ...filterState?.dataSetFields,\n                  items: entitiState?.dataSetFields?.items?.filter(\n                    (d) => d.type === \"related\"\n                  ),\n                },\n                dataSetFields,\n              },\n            ],\n          })\n        );\n\n        dispatch(setLoading(false));\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n\n    if (get(filterState, \"filterFieldType.type\") === \"related\") {\n      setEntitiState({\n        ...entitiState,\n        filtersList: entitiState?.filtersList?.filter(\n          (f) => f?.filterId !== filterState?.filterId\n        ),\n      });\n      setIsFullEntitie(true);\n      getDataSet();\n    }\n  }, [get(filterState, \"filterFieldType.type\") === \"related\"]);\n\n  if (filterState.logicalType) {\n    return (\n      <CombinedFilter>\n        {entitiState?.filtersList?.length > 1 && (\n          <Checkbox\n            checked={filterState.checked}\n            disabled={\n              !isFullEntitie ||\n              (!filterState?.checked && entitiState?.checkedFilters > 1)\n            }\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            onChange={(e) => {\n              setFilterState({ ...filterState, checked: e.target.checked });\n              setEntitiState({\n                ...entitiState,\n\n                checkedFilters:\n                  get(entitiState, \"checkedFilters\") ||\n                  entitiState.checkedFilters === 0\n                    ? e.target.checked\n                      ? entitiState?.checkedFilters + 1\n                      : entitiState?.checkedFilters - 1\n                    : 1,\n              });\n            }}\n          />\n        )}\n\n        <b>{filterState?.logicalType}</b>\n\n        <div className=\"combined-filters-box\">\n          {filterState?.items?.map((i) => {\n            if (i.logicalType) {\n              return (\n                <CombinedFilters\n                  key={i.filterId}\n                  entitiState={entitiState}\n                  setFilterState={setFilterState}\n                  filterState={i}\n                  setIsFullEntitie={setIsFullEntitie}\n                  setEntitiState={setEntitiState}\n                  register={register}\n                  control={control}\n                  filterId={i.filterId}\n                  filterData={filterData}\n                  isFullEntitie={isFullEntitie}\n                />\n              );\n            }\n\n            return (\n              <FilterCombinedComponent\n                key={i.filterId}\n                entitiState={entitiState}\n                setFilterState={setFilterState}\n                filterState={i}\n                setEntitiState={setEntitiState}\n                setIsFullEntitie={setIsFullEntitie}\n                register={register}\n                control={control}\n                filterId={i.filterId}\n                filterItems={filterState?.items}\n                filterData={filterData}\n              />\n            );\n          })}\n        </div>\n\n        <IconButton\n          onClick={() => {\n            setEntitiState({\n              ...entitiState,\n\n              filtersList: entitiState?.filtersList?.filter(\n                (f) => f?.filterId !== filterState?.filterId\n              ),\n            });\n\n            setIsFullEntitie(true);\n          }}\n          component=\"span\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      </CombinedFilter>\n    );\n  }\n\n  return (\n    <FilterComponent\n      filterState={filterState}\n      entitiState={entitiState}\n      setFilterState={setFilterState}\n      setEntitiState={setEntitiState}\n      isFullEntitie={isFullEntitie}\n      setIsFullEntitie={setIsFullEntitie}\n      register={register}\n      control={control}\n    />\n  );\n};\n\nexport default FilterForNewDataSet;\n"]},"metadata":{},"sourceType":"module"}