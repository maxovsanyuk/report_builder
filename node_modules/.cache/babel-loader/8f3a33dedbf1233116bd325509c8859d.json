{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Workspace/Widget.js\";\nimport React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setWidgetsList } from \"../../redux/actions/app_action\";\nimport styled from \"styled-components\";\nconst WidgetBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  height: 70px;\n  background: #fff;\n  border: 1px solid #ccc;\n  margin: 0 1px 1px 0;\n  transition: 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    border: 1px solid #000;\n    transition: 0.3s;\n    .info-box {\n      transition: 0.5s;\n      transition-delay: 0.3s;\n      opacity: 1;\n    }\n  }\n`;\nexport const Widget = ({\n  wgConfig,\n  setCurrentWgInfo\n}) => {\n  const {\n    name\n  } = wgConfig;\n  const state = useSelector(state => state.app);\n  const {\n    widgetsList\n  } = state;\n  console.log(wgConfig, \"wgConfig\");\n  const dispatch = useDispatch();\n\n  function getCoords(elem) {\n    const box = elem.getBoundingClientRect();\n    return {\n      top: box.top + window.pageYOffset,\n      left: box.left + window.pageXOffset\n    };\n  }\n\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      name,\n      type: \"box\"\n    },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        var widget = document.getElementById(name);\n        dispatch(setWidgetsList([...widgetsList, {\n          id: new Date().getTime(),\n          top: getCoords(widget).top,\n          left: getCoords(widget).left,\n          height: 200,\n          width: 200,\n          ...wgConfig\n        }])); // alert(`You dropped ${item.name} into ${dropResult.name}!`);\n      }\n    },\n    collect: monitor => {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(WidgetBox, {\n    id: name,\n    ref: drag,\n    style: {\n      opacity: isDragging ? 0.4 : 1\n    },\n    onMouseEnter: () => {\n      setCurrentWgInfo(name);\n    },\n    onMouseLeave: () => {\n      setCurrentWgInfo(null);\n    },\n    onMouseDown: () => {\n      widgetsList.filter(w => w.name === name).length && alert(\"Widget already exist\");\n      setCurrentWgInfo(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(`../WidgetsToolBar/images/${name}.png`),\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Workspace/Widget.js"],"names":["React","useDrag","useDispatch","useSelector","setWidgetsList","styled","WidgetBox","div","Widget","wgConfig","setCurrentWgInfo","name","state","app","widgetsList","console","log","dispatch","getCoords","elem","box","getBoundingClientRect","top","window","pageYOffset","left","pageXOffset","isDragging","drag","item","type","end","monitor","dropResult","getDropResult","widget","document","getElementById","id","Date","getTime","height","width","collect","opacity","filter","w","length","alert","require"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDrag } from \"react-dnd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setWidgetsList } from \"../../redux/actions/app_action\";\n\nimport styled from \"styled-components\";\n\nconst WidgetBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  height: 70px;\n  background: #fff;\n  border: 1px solid #ccc;\n  margin: 0 1px 1px 0;\n  transition: 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    border: 1px solid #000;\n    transition: 0.3s;\n    .info-box {\n      transition: 0.5s;\n      transition-delay: 0.3s;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Widget = ({ wgConfig, setCurrentWgInfo }) => {\n  const { name } = wgConfig;\n  const state = useSelector((state) => state.app);\n  const { widgetsList } = state;\n\n  console.log(wgConfig, \"wgConfig\");\n\n  const dispatch = useDispatch();\n\n  function getCoords(elem) {\n    const box = elem.getBoundingClientRect();\n    return {\n      top: box.top + window.pageYOffset,\n      left: box.left + window.pageXOffset,\n    };\n  }\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { name, type: \"box\" },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        var widget = document.getElementById(name);\n\n        dispatch(\n          setWidgetsList([\n            ...widgetsList,\n            {\n              id: new Date().getTime(),\n              top: getCoords(widget).top,\n              left: getCoords(widget).left,\n              height: 200,\n              width: 200,\n              ...wgConfig,\n            },\n          ])\n        );\n\n        // alert(`You dropped ${item.name} into ${dropResult.name}!`);\n      }\n    },\n    collect: (monitor) => {\n      return {\n        isDragging: monitor.isDragging(),\n      };\n    },\n  });\n\n  return (\n    <WidgetBox\n      id={name}\n      ref={drag}\n      style={{ opacity: isDragging ? 0.4 : 1 }}\n      onMouseEnter={() => {\n        setCurrentWgInfo(name);\n      }}\n      onMouseLeave={() => {\n        setCurrentWgInfo(null);\n      }}\n      onMouseDown={() => {\n        widgetsList.filter((w) => w.name === name).length &&\n          alert(\"Widget already exist\");\n        setCurrentWgInfo(null);\n      }}\n    >\n      <img src={require(`../WidgetsToolBar/images/${name}.png`)} alt={name} />\n    </WidgetBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}