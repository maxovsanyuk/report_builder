{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarImageManager/SidebarImageManager.js\";\nimport React, { useState } from \"react\";\nimport { AnimatedComponent } from \"../../views/AnimatedComponent\";\nimport ImageUploader from \"react-images-upload\";\nimport styled from \"styled-components\";\nimport isEmpty from \"lodash/isEmpty\";\nconst ImageManagerComp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n  height: calc(100% - 90px);\n\n  .errorsContainer {\n    height: 30px;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  .images-box {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    margin: 20px 0 0 0;\n    width: calc(100% - 40px);\n    height: 400px;\n    overflow: auto;\n    background: #fff;\n    padding: 20px;\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.05);\n    border-radius: 10px;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .img {\n      border: none;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  .img-loader {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst SidebarImageManager = () => {\n  const [imagesState, setImagesState] = useState();\n  console.log(imagesState, \"imagesState\");\n  return /*#__PURE__*/React.createElement(AnimatedComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Image Manager\"), /*#__PURE__*/React.createElement(ImageManagerComp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"images-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, imagesState && imagesState.map(i => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => setImagesState(imagesState.filter(img => img.name !== i.name)),\n      style: {\n        width: \"200px\",\n        height: \"200px\",\n        background: `url(${URL.createObjectURL(i)}) no-repeat center`,\n        backgroundSize: \"contain\",\n        margin: \"10px\",\n        boxShadow: \"3px 5px 3px 0 rgba(0, 0, 0, 0.05)\"\n      },\n      className: \"img\",\n      key: i.name,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    });\n  })), /*#__PURE__*/React.createElement(ImageUploader, {\n    className: \"img-loader\",\n    withIcon: true,\n    buttonText: \"Choose images\",\n    onChange: (pFile, pUrl) => setImagesState(!isEmpty(imagesState) ? imagesState.filter(i => i.name !== pFile.name) : pFile),\n    imgExtension: [\".jpg\", \"jpeg\", \".gif\", \".png\", \".gif\"],\n    maxFileSize: 5242880,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SidebarImageManager; // xsd","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarImageManager/SidebarImageManager.js"],"names":["React","useState","AnimatedComponent","ImageUploader","styled","isEmpty","ImageManagerComp","div","SidebarImageManager","imagesState","setImagesState","console","log","textAlign","map","i","filter","img","name","width","height","background","URL","createObjectURL","backgroundSize","margin","boxShadow","pFile","pUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAApC;;AA+CA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyB,aAAzB;AAEA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAE;AAAEI,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAGE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,IACVA,WAAW,CAACK,GAAZ,CAAiBC,CAAD,IAAO;AACrB,wBACE;AACE,MAAA,OAAO,EAAE,MACPL,cAAc,CACZD,WAAW,CAACO,MAAZ,CAAoBC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAaH,CAAC,CAACG,IAA3C,CADY,CAFlB;AAME,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,UAAU,EAAG,OAAMC,GAAG,CAACC,eAAJ,CACjBR,CADiB,CAEjB,oBALG;AAMLS,QAAAA,cAAc,EAAE,SANX;AAOLC,QAAAA,MAAM,EAAE,MAPH;AAQLC,QAAAA,SAAS,EAAE;AARN,OANT;AAgBE,MAAA,SAAS,EAAC,KAhBZ;AAiBE,MAAA,GAAG,EAAEX,CAAC,CAACG,IAjBT;AAkBE,MAAA,GAAG,EAAC,EAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAsBD,GAvBD,CAFJ,CADF,eA6BE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,UAAU,EAAC,eAHb;AAIE,IAAA,QAAQ,EAAE,CAACS,KAAD,EAAQC,IAAR,KACRlB,cAAc,CACZ,CAACL,OAAO,CAACI,WAAD,CAAR,GACIA,WAAW,CAACO,MAAZ,CAAoBD,CAAD,IAAOA,CAAC,CAACG,IAAF,KAAWS,KAAK,CAACT,IAA3C,CADJ,GAEIS,KAHQ,CALlB;AAWE,IAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,CAXhB;AAYE,IAAA,WAAW,EAAE,OAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CAHF,CADF;AAkDD,CAvDD;;AAyDA,eAAenB,mBAAf,C,CAEA","sourcesContent":["import React, { useState } from \"react\";\nimport { AnimatedComponent } from \"../../views/AnimatedComponent\";\nimport ImageUploader from \"react-images-upload\";\n\nimport styled from \"styled-components\";\n\nimport isEmpty from \"lodash/isEmpty\";\n\nconst ImageManagerComp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n  height: calc(100% - 90px);\n\n  .errorsContainer {\n    height: 30px;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  .images-box {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    margin: 20px 0 0 0;\n    width: calc(100% - 40px);\n    height: 400px;\n    overflow: auto;\n    background: #fff;\n    padding: 20px;\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.05);\n    border-radius: 10px;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .img {\n      border: none;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  .img-loader {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst SidebarImageManager = () => {\n  const [imagesState, setImagesState] = useState();\n\n  console.log(imagesState, \"imagesState\");\n\n  return (\n    <AnimatedComponent>\n      <h2 style={{ textAlign: \"center\" }}>Image Manager</h2>\n\n      <ImageManagerComp>\n        <div className=\"images-box\">\n          {imagesState &&\n            imagesState.map((i) => {\n              return (\n                <img\n                  onClick={() =>\n                    setImagesState(\n                      imagesState.filter((img) => img.name !== i.name)\n                    )\n                  }\n                  style={{\n                    width: \"200px\",\n                    height: \"200px\",\n                    background: `url(${URL.createObjectURL(\n                      i\n                    )}) no-repeat center`,\n                    backgroundSize: \"contain\",\n                    margin: \"10px\",\n                    boxShadow: \"3px 5px 3px 0 rgba(0, 0, 0, 0.05)\",\n                  }}\n                  className=\"img\"\n                  key={i.name}\n                  alt=\"\"\n                />\n              );\n            })}\n        </div>\n\n        <ImageUploader\n          className=\"img-loader\"\n          withIcon\n          buttonText=\"Choose images\"\n          onChange={(pFile, pUrl) =>\n            setImagesState(\n              !isEmpty(imagesState)\n                ? imagesState.filter((i) => i.name !== pFile.name)\n                : pFile\n            )\n          }\n          imgExtension={[\".jpg\", \"jpeg\", \".gif\", \".png\", \".gif\"]}\n          maxFileSize={5242880}\n        />\n      </ImageManagerComp>\n    </AnimatedComponent>\n  );\n};\n\nexport default SidebarImageManager;\n\n// xsd\n"]},"metadata":{},"sourceType":"module"}