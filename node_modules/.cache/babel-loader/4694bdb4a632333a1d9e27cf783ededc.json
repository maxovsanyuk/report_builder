{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Workspace/Dustbin.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions/app_action\";\nimport ResizibleImg from \"../../components/WidgetsToolBar/images/resizible.png\";\nimport styled from \"styled-components\";\nimport Grid from \"../../images/grid.png\"; // DND\n\nimport { useDrop } from \"react-dnd\";\nimport ReactResizeDetector from \"react-resize-detector\"; // LODASH\n\nimport get from \"lodash/get\";\nimport DragableWgComponent from \"./views/DragableWgComponent\";\nconst DnDBox = styled.div`\n  width: calc(100% - 60px);\n  margin: 0 60px 0 0;\n  height: calc(100vh - 60px);\n  display: flex;\n  flex-flow: nowrap column;\n  overflow: auto;\n\n  .react-draggable,\n  .cursor {\n    cursor: move;\n  }\n  .no-cursor {\n    cursor: auto;\n  }\n  .cursor-y {\n    cursor: ns-resize;\n  }\n  .cursor-x {\n    cursor: ew-resize;\n  }\n\n  .box {\n    min-height: 200px;\n    min-width: 200px;\n    float: left;\n    z-index: 999;\n\n    &:hover {\n      cursor: default;\n    }\n\n    //&::-webkit-resizer {\n    //}\n  }\n\n  .sidebar {\n    border-radius: 2px;\n    position: relative;\n    z-index: 1000;\n    resize: both;\n    overflow: auto;\n    box-sizing: border-box;\n  }\n\n  .wg-info {\n    text-align: center;\n    padding: 10px;\n    background: #fff;\n  }\n\n  .close-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    border: 1px solid #ccc;\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      transition: 0.3s;\n      background: #4da6ff;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n  .remove-btn {\n    margin: 5px 0 0 0;\n    padding: 5px;\n    border: none;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      color: crimson;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .resizible-btn {\n    position: absolute;\n    height: 50px;\n    width: 50px;\n    background: #fff url(${ResizibleImg}) no-repeat center;\n    background-size: 50%;\n    border-radius: 50%;\n    left: -10px;\n    top: -10px;\n    z-index: 100;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: move;\n      background: #4da6ff url(${ResizibleImg}) no-repeat center;\n      background-size: 50%;\n      transform: rotate(360deg);\n    }\n  }\n\n  body,\n  html {\n    background: black;\n  }\n  .resizable {\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 100px;\n    left: 100px;\n  }\n\n  .resizable .resizers {\n    width: 100%;\n    height: 100%;\n    border: 3px dashed #4286f4;\n    box-sizing: border-box;\n  }\n\n  .resizable .resizers .resizer {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: white;\n    border: 3px solid #4286f4;\n    position: absolute;\n    z-index: 1000;\n  }\n\n  .resizable .resizers .resizer.top-right {\n    right: -5px;\n    top: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-left {\n    left: -5px;\n    bottom: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-right {\n    right: -5px;\n    bottom: -5px;\n    cursor: nwse-resize;\n  }\n`;\nexport const Dustbin = () => {\n  var _reportSettings$basic, _reportSettings$basic2, _reportSettings$basic3, _reportSettings$basic4, _reportSettings$basic5, _reportSettings$basic6;\n\n  const [currentWidgetState, setCurrentWidgetState] = useState({\n    isActive: false,\n    name: null,\n    draggable: true,\n    isMenuOpen: false\n  });\n  const state = useSelector(state => state.app);\n  const {\n    widgetsList,\n    settings\n  } = state;\n  const {\n    reportSettings\n  } = settings;\n  console.log(reportSettings, \"reportSettings\");\n  const dispatch = useDispatch();\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop({\n    accept: \"box\",\n\n    drop(item, monitor) {\n      return {\n        name: \"Dustbin\"\n      };\n    },\n\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = canDrop && isOver;\n  let background = `url(${Grid})`;\n\n  if (isActive) {\n    background = `lightskyblue url(${Grid})`;\n  } else if (canDrop) {\n    background = `lightgreen url(${Grid})`;\n  }\n\n  const [activeDrags, setActiveDrags] = useState(0);\n\n  function onStart() {\n    return currentWidgetState === null || currentWidgetState === void 0 ? void 0 : currentWidgetState.draggable;\n  }\n\n  function onStop() {\n    setActiveDrags(activeDrags);\n  }\n\n  const dragHandlers = {\n    onStart,\n    onStop\n  };\n  return /*#__PURE__*/React.createElement(DnDBox, {\n    reportSettings: reportSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"fit-content\",\n      margin: \"10px\",\n      background: `rgba(${reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic = reportSettings.basic) === null || _reportSettings$basic === void 0 ? void 0 : (_reportSettings$basic2 = _reportSettings$basic.backgroundColor) === null || _reportSettings$basic2 === void 0 ? void 0 : _reportSettings$basic2.rgb.r}, ${reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic3 = reportSettings.basic) === null || _reportSettings$basic3 === void 0 ? void 0 : (_reportSettings$basic4 = _reportSettings$basic3.backgroundColor) === null || _reportSettings$basic4 === void 0 ? void 0 : _reportSettings$basic4.rgb.g},${reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic5 = reportSettings.basic) === null || _reportSettings$basic5 === void 0 ? void 0 : (_reportSettings$basic6 = _reportSettings$basic5.backgroundColor) === null || _reportSettings$basic6 === void 0 ? void 0 : _reportSettings$basic6.rgb.b}, 0.6)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactResizeDetector, {\n    handleWidth: true,\n    handleHeight: true,\n    onResize: (width, height) => {\n      var _settings$reportSetti;\n\n      dispatch(setSettings({ ...settings,\n        reportSettings: { ...settings.reportSettings,\n          position: { ...(settings === null || settings === void 0 ? void 0 : (_settings$reportSetti = settings.reportSettings) === null || _settings$reportSetti === void 0 ? void 0 : _settings$reportSetti.position),\n            width: width + 4,\n            height: height + 4\n          }\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, ({\n    width,\n    height\n  }) => {\n    var _reportSettings$basic7, _reportSettings$basic8, _reportSettings$basic9, _reportSettings$basic10;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      ref: drop,\n      style: {\n        background,\n        position: \"relative\",\n        overflow: \"auto\",\n        textAlign: \"center\",\n        width: `${reportSettings.position.width}px`,\n        height: `${reportSettings.position.height}px`,\n        minHeight: `${reportSettings.position.minHeight}px`,\n        minWidth: `${reportSettings.position.minWidth}px`,\n        border: (reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic7 = reportSettings.basic) === null || _reportSettings$basic7 === void 0 ? void 0 : _reportSettings$basic7.border) === \"None\" ? \"2px solid transparent\" : `2px ${(reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic8 = reportSettings.basic) === null || _reportSettings$basic8 === void 0 ? void 0 : _reportSettings$basic8.border) || \"solid\"} ${(reportSettings === null || reportSettings === void 0 ? void 0 : (_reportSettings$basic9 = reportSettings.basic) === null || _reportSettings$basic9 === void 0 ? void 0 : (_reportSettings$basic10 = _reportSettings$basic9.color) === null || _reportSettings$basic10 === void 0 ? void 0 : _reportSettings$basic10.hex) || \"#ccc\"}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"5px 0 0 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, \"W:\", \" \", get(settings, \"reportSettings.position.width\", get(reportSettings, \"basic.border\") === \"None\" ? width : width + 4), \" \", \"x H:\", \" \", get(settings, \"reportSettings.position.height\", get(reportSettings, \"basic.border\") === \"None\" ? height : height + 4)), widgetsList.map(w => {\n      return /*#__PURE__*/React.createElement(DragableWgComponent, {\n        key: w.id,\n        widget: w,\n        dragHandlers: dragHandlers,\n        setCurrentWidgetState: setCurrentWidgetState,\n        currentWidgetState: currentWidgetState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }\n      });\n    }));\n  })));\n};","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Workspace/Dustbin.js"],"names":["React","useState","useDispatch","useSelector","setSettings","ResizibleImg","styled","Grid","useDrop","ReactResizeDetector","get","DragableWgComponent","DnDBox","div","Dustbin","currentWidgetState","setCurrentWidgetState","isActive","name","draggable","isMenuOpen","state","app","widgetsList","settings","reportSettings","console","log","dispatch","canDrop","isOver","drop","accept","item","monitor","collect","background","activeDrags","setActiveDrags","onStart","onStop","dragHandlers","position","width","margin","basic","backgroundColor","rgb","r","g","b","height","overflow","textAlign","minHeight","minWidth","border","color","hex","map","w","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions/app_action\";\n\nimport ResizibleImg from \"../../components/WidgetsToolBar/images/resizible.png\";\n\nimport styled from \"styled-components\";\n\nimport Grid from \"../../images/grid.png\";\n\n// DND\n\nimport { useDrop } from \"react-dnd\";\nimport ReactResizeDetector from \"react-resize-detector\";\n\n// LODASH\n\nimport get from \"lodash/get\";\n\nimport DragableWgComponent from \"./views/DragableWgComponent\";\n\nconst DnDBox = styled.div`\n  width: calc(100% - 60px);\n  margin: 0 60px 0 0;\n  height: calc(100vh - 60px);\n  display: flex;\n  flex-flow: nowrap column;\n  overflow: auto;\n\n  .react-draggable,\n  .cursor {\n    cursor: move;\n  }\n  .no-cursor {\n    cursor: auto;\n  }\n  .cursor-y {\n    cursor: ns-resize;\n  }\n  .cursor-x {\n    cursor: ew-resize;\n  }\n\n  .box {\n    min-height: 200px;\n    min-width: 200px;\n    float: left;\n    z-index: 999;\n\n    &:hover {\n      cursor: default;\n    }\n\n    //&::-webkit-resizer {\n    //}\n  }\n\n  .sidebar {\n    border-radius: 2px;\n    position: relative;\n    z-index: 1000;\n    resize: both;\n    overflow: auto;\n    box-sizing: border-box;\n  }\n\n  .wg-info {\n    text-align: center;\n    padding: 10px;\n    background: #fff;\n  }\n\n  .close-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    border: 1px solid #ccc;\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      cursor: pointer;\n      transition: 0.3s;\n      background: #4da6ff;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n  .remove-btn {\n    margin: 5px 0 0 0;\n    padding: 5px;\n    border: none;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    background: #fff;\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: pointer;\n      color: crimson;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .resizible-btn {\n    position: absolute;\n    height: 50px;\n    width: 50px;\n    background: #fff url(${ResizibleImg}) no-repeat center;\n    background-size: 50%;\n    border-radius: 50%;\n    left: -10px;\n    top: -10px;\n    z-index: 100;\n    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.8);\n    transition: 0.3s;\n    &:hover {\n      transition: 0.3s;\n      cursor: move;\n      background: #4da6ff url(${ResizibleImg}) no-repeat center;\n      background-size: 50%;\n      transform: rotate(360deg);\n    }\n  }\n\n  body,\n  html {\n    background: black;\n  }\n  .resizable {\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 100px;\n    left: 100px;\n  }\n\n  .resizable .resizers {\n    width: 100%;\n    height: 100%;\n    border: 3px dashed #4286f4;\n    box-sizing: border-box;\n  }\n\n  .resizable .resizers .resizer {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: white;\n    border: 3px solid #4286f4;\n    position: absolute;\n    z-index: 1000;\n  }\n\n  .resizable .resizers .resizer.top-right {\n    right: -5px;\n    top: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-left {\n    left: -5px;\n    bottom: -5px;\n    cursor: nesw-resize;\n  }\n  .resizable .resizers .resizer.bottom-right {\n    right: -5px;\n    bottom: -5px;\n    cursor: nwse-resize;\n  }\n`;\n\nexport const Dustbin = () => {\n  const [currentWidgetState, setCurrentWidgetState] = useState({\n    isActive: false,\n    name: null,\n    draggable: true,\n    isMenuOpen: false,\n  });\n\n  const state = useSelector((state) => state.app);\n  const { widgetsList, settings } = state;\n  const { reportSettings } = settings;\n\n  console.log(reportSettings, \"reportSettings\");\n\n  const dispatch = useDispatch();\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"box\",\n    drop(item, monitor) {\n      return { name: \"Dustbin\" };\n    },\n\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const isActive = canDrop && isOver;\n  let background = `url(${Grid})`;\n  if (isActive) {\n    background = `lightskyblue url(${Grid})`;\n  } else if (canDrop) {\n    background = `lightgreen url(${Grid})`;\n  }\n\n  const [activeDrags, setActiveDrags] = useState(0);\n\n  function onStart() {\n    return currentWidgetState?.draggable;\n  }\n\n  function onStop() {\n    setActiveDrags(activeDrags);\n  }\n\n  const dragHandlers = { onStart, onStop };\n\n  return (\n    <DnDBox reportSettings={reportSettings}>\n      <div\n        style={{\n          position: \"relative\",\n          width: \"fit-content\",\n          margin: \"10px\",\n          background: `rgba(${reportSettings?.basic?.backgroundColor?.rgb.r}, ${reportSettings?.basic?.backgroundColor?.rgb.g},${reportSettings?.basic?.backgroundColor?.rgb.b}, 0.6)`,\n        }}\n      >\n        <ReactResizeDetector\n          handleWidth\n          handleHeight\n          onResize={(width, height) => {\n            dispatch(\n              setSettings({\n                ...settings,\n                reportSettings: {\n                  ...settings.reportSettings,\n                  position: {\n                    ...settings?.reportSettings?.position,\n                    width: width + 4,\n                    height: height + 4,\n                  },\n                },\n              })\n            );\n          }}\n        >\n          {({ width, height }) => {\n            return (\n              <div\n                className=\"sidebar\"\n                ref={drop}\n                style={{\n                  background,\n                  position: \"relative\",\n                  overflow: \"auto\",\n                  textAlign: \"center\",\n                  width: `${reportSettings.position.width}px`,\n                  height: `${reportSettings.position.height}px`,\n                  minHeight: `${reportSettings.position.minHeight}px`,\n                  minWidth: `${reportSettings.position.minWidth}px`,\n                  border:\n                    reportSettings?.basic?.border === \"None\"\n                      ? \"2px solid transparent\"\n                      : `2px ${reportSettings?.basic?.border || \"solid\"} ${\n                          reportSettings?.basic?.color?.hex || \"#ccc\"\n                        }`,\n                }}\n              >\n                <div style={{ margin: \"5px 0 0 0\" }}>\n                  W:{\" \"}\n                  {get(\n                    settings,\n                    \"reportSettings.position.width\",\n                    get(reportSettings, \"basic.border\") === \"None\"\n                      ? width\n                      : width + 4\n                  )}{\" \"}\n                  x H:{\" \"}\n                  {get(\n                    settings,\n                    \"reportSettings.position.height\",\n                    get(reportSettings, \"basic.border\") === \"None\"\n                      ? height\n                      : height + 4\n                  )}\n                </div>\n                {/*<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">*/}\n                {/*  <defs>*/}\n                {/*    <pattern*/}\n                {/*      id=\"smallGrid\"*/}\n                {/*      width=\"6\"*/}\n                {/*      height=\"6\"*/}\n                {/*      patternUnits=\"userSpaceOnUse\"*/}\n                {/*    >*/}\n                {/*      <path*/}\n                {/*        d=\"M 8 0 L 0 0 0 8\"*/}\n                {/*        fill=\"none\"*/}\n                {/*        stroke=\"gray\"*/}\n                {/*        stroke-width=\"0.5\"*/}\n                {/*      />*/}\n                {/*    </pattern>*/}\n                {/*    <pattern*/}\n                {/*      id=\"grid\"*/}\n                {/*      width=\"60\"*/}\n                {/*      height=\"60\"*/}\n                {/*      patternUnits=\"userSpaceOnUse\"*/}\n                {/*    >*/}\n                {/*      <rect width=\"60\" height=\"60\" fill=\"url(#smallGrid)\" />*/}\n                {/*      <path*/}\n                {/*        d=\"M 60 0 L 0 0 0 60\"*/}\n                {/*        fill=\"none\"*/}\n                {/*        stroke=\"gray\"*/}\n                {/*        stroke-width=\"1\"*/}\n                {/*      />*/}\n                {/*    </pattern>*/}\n                {/*  </defs>*/}\n                {/*  <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />*/}\n                {/*</svg>*/}\n                {widgetsList.map((w) => {\n                  return (\n                    <DragableWgComponent\n                      key={w.id}\n                      widget={w}\n                      dragHandlers={dragHandlers}\n                      setCurrentWidgetState={setCurrentWidgetState}\n                      currentWidgetState={currentWidgetState}\n                    />\n                  );\n                })}\n              </div>\n            );\n          }}\n        </ReactResizeDetector>\n      </div>\n    </DnDBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}