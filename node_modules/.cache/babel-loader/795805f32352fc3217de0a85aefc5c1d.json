{"ast":null,"code":"var _jsxFileName = \"/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarParameters/views/ParameterAssignValuesDialog.js\";\nimport React, { useState } from \"react\";\nimport { setNewParametersSetState } from \"../../../../redux/actions/app_action\";\nimport SpecifyRadioComponent from \"./SpecifyRadioComponent\";\nimport QueryValueRadioComponent from \"./QueryValueRadioComponent\"; // MATERIAL UI\n\nimport TabPanel from \"@material-ui/lab/TabPanel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TabContext from \"@material-ui/lab/TabContext\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport TabList from \"@material-ui/lab/TabList\";\nimport Tab from \"@material-ui/core/Tab\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\"; // LODASH\n\nimport get from \"lodash/get\";\n\nconst TabPanelComponent = ({\n  value,\n  name,\n  parametersState,\n  setParametersState,\n  dispatch,\n  newParametersSet\n}) => {\n  const [selectedValue, setSelectedValue] = useState(get(newParametersSet, `${name}.selected`) || \"none\");\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n    setParametersState({ ...parametersState,\n      [name]: e.target.value\n    });\n    dispatch(setNewParametersSetState({ ...newParametersSet,\n      [name]: { ...newParametersSet[name],\n        selected: e.target.value,\n        [e.target.value]: e.target.value === \"specify\" ? {\n          items: get(newParametersSet, `${name}.${e.target.value}.items`) ? [...newParametersSet[name][e.target.value].items] : [],\n          type: e.target.value\n        } : {\n          type: e.target.value,\n          ...get(newParametersSet, `${name}.${e.target.value}`)\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(TabPanel, {\n    style: {\n      width: \"600px\",\n      height: \"300px\"\n    },\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, [{\n    name: \"None\",\n    type: \"none\"\n  }, {\n    name: \"Specify\",\n    type: \"specify\"\n  }, {\n    name: \"Query Value\",\n    type: \"queryValue\"\n  }].map(({\n    name,\n    type\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: name,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"fit-content\",\n        margin: \"0 10px 0 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      checked: selectedValue === type,\n      onChange: handleChange,\n      value: type,\n      name: \"radio-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), name);\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, selectedValue === \"specify\" && /*#__PURE__*/React.createElement(SpecifyRadioComponent, {\n    dispatch: dispatch,\n    newParametersSet: newParametersSet,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), selectedValue === \"queryValue\" && /*#__PURE__*/React.createElement(QueryValueRadioComponent, {\n    dispatch: dispatch,\n    newParametersSet: newParametersSet,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst ParameterAssignValuesDialog = ({\n  isOpenDialog,\n  setIsOpenDialog,\n  setParametersState,\n  parametersState,\n  newParametersSet,\n  dispatch\n}) => {\n  const [value, setValue] = useState(1);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    maxWidth: \"xl\",\n    open: isOpenDialog,\n    onClose: () => setIsOpenDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"Parameter\"), /*#__PURE__*/React.createElement(TabContext, {\n    value: value,\n    style: {\n      width: \"500px\",\n      height: \"250px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    style: {\n      background: \"none\",\n      color: \"#000\",\n      boxShadow: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabList, {\n    onChange: (e, newValue) => setValue(newValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, [{\n    label: \"Available Value\",\n    value: 1\n  }, {\n    label: \"Default Value\",\n    value: 2\n  }].map(({\n    label,\n    value\n  }) => /*#__PURE__*/React.createElement(Tab, {\n    key: label,\n    value: value,\n    label: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })))), [{\n    name: \"availableValue\",\n    value: 1\n  }, {\n    name: \"defaultValue\",\n    value: 2\n  }].map(({\n    name,\n    label,\n    value\n  }) => /*#__PURE__*/React.createElement(TabPanelComponent, {\n    key: name,\n    name: name,\n    label: label,\n    value: value,\n    dispatch: dispatch,\n    parametersState: parametersState,\n    setParametersState: setParametersState,\n    newParametersSet: newParametersSet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setIsOpenDialog(false),\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n};\n\nexport default ParameterAssignValuesDialog;","map":{"version":3,"sources":["/Users/admin/UDS/addons-reportbuilder/src/components/Sidebar/SidebarParameters/views/ParameterAssignValuesDialog.js"],"names":["React","useState","setNewParametersSetState","SpecifyRadioComponent","QueryValueRadioComponent","TabPanel","Radio","Dialog","DialogTitle","TabContext","AppBar","TabList","Tab","DialogActions","Button","get","TabPanelComponent","value","name","parametersState","setParametersState","dispatch","newParametersSet","selectedValue","setSelectedValue","handleChange","e","target","selected","items","type","width","height","display","flexWrap","map","alignItems","margin","ParameterAssignValuesDialog","isOpenDialog","setIsOpenDialog","setValue","background","color","boxShadow","newValue","label"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { setNewParametersSetState } from \"../../../../redux/actions/app_action\";\n\nimport SpecifyRadioComponent from \"./SpecifyRadioComponent\";\nimport QueryValueRadioComponent from \"./QueryValueRadioComponent\";\n\n// MATERIAL UI\n\nimport TabPanel from \"@material-ui/lab/TabPanel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TabContext from \"@material-ui/lab/TabContext\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport TabList from \"@material-ui/lab/TabList\";\nimport Tab from \"@material-ui/core/Tab\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\n// LODASH\n\nimport get from \"lodash/get\";\n\nconst TabPanelComponent = ({\n  value,\n  name,\n  parametersState,\n  setParametersState,\n  dispatch,\n  newParametersSet,\n}) => {\n  const [selectedValue, setSelectedValue] = useState(\n    get(newParametersSet, `${name}.selected`) || \"none\"\n  );\n\n  const handleChange = (e) => {\n    setSelectedValue(e.target.value);\n\n    setParametersState({\n      ...parametersState,\n      [name]: e.target.value,\n    });\n\n    dispatch(\n      setNewParametersSetState({\n        ...newParametersSet,\n        [name]: {\n          ...newParametersSet[name],\n          selected: e.target.value,\n          [e.target.value]:\n            e.target.value === \"specify\"\n              ? {\n                  items: get(\n                    newParametersSet,\n                    `${name}.${e.target.value}.items`\n                  )\n                    ? [...newParametersSet[name][e.target.value].items]\n                    : [],\n                  type: e.target.value,\n                }\n              : {\n                  type: e.target.value,\n                  ...get(newParametersSet, `${name}.${e.target.value}`),\n                },\n        },\n      })\n    );\n  };\n\n  return (\n    <TabPanel style={{ width: \"600px\", height: \"300px\" }} value={value}>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {[\n          { name: \"None\", type: \"none\" },\n          { name: \"Specify\", type: \"specify\" },\n          { name: \"Query Value\", type: \"queryValue\" },\n        ].map(({ name, type }) => {\n          return (\n            <div\n              key={name}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                height: \"fit-content\",\n                margin: \"0 10px 0 0\",\n              }}\n            >\n              <Radio\n                checked={selectedValue === type}\n                onChange={handleChange}\n                value={type}\n                name=\"radio-button\"\n              />\n              {name}\n            </div>\n          );\n        })}\n        <div style={{ width: \"100%\" }}>\n          {selectedValue === \"specify\" && (\n            <SpecifyRadioComponent\n              dispatch={dispatch}\n              newParametersSet={newParametersSet}\n              name={name}\n            />\n          )}\n          {selectedValue === \"queryValue\" && (\n            <QueryValueRadioComponent\n              dispatch={dispatch}\n              newParametersSet={newParametersSet}\n              name={name}\n            />\n          )}\n        </div>\n      </div>\n    </TabPanel>\n  );\n};\n\nconst ParameterAssignValuesDialog = ({\n  isOpenDialog,\n  setIsOpenDialog,\n  setParametersState,\n  parametersState,\n  newParametersSet,\n  dispatch,\n}) => {\n  const [value, setValue] = useState(1);\n\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open={isOpenDialog}\n      onClose={() => setIsOpenDialog(false)}\n    >\n      <DialogTitle>Parameter</DialogTitle>\n\n      <TabContext value={value} style={{ width: \"500px\", height: \"250px\" }}>\n        <AppBar\n          position=\"static\"\n          style={{ background: \"none\", color: \"#000\", boxShadow: \"none\" }}\n        >\n          <TabList onChange={(e, newValue) => setValue(newValue)}>\n            {[\n              {\n                label: \"Available Value\",\n                value: 1,\n              },\n              {\n                label: \"Default Value\",\n                value: 2,\n              },\n            ].map(({ label, value }) => (\n              <Tab key={label} value={value} label={label} />\n            ))}\n          </TabList>\n        </AppBar>\n\n        {[\n          {\n            name: \"availableValue\",\n            value: 1,\n          },\n          {\n            name: \"defaultValue\",\n            value: 2,\n          },\n        ].map(({ name, label, value }) => (\n          <TabPanelComponent\n            key={name}\n            name={name}\n            label={label}\n            value={value}\n            dispatch={dispatch}\n            parametersState={parametersState}\n            setParametersState={setParametersState}\n            newParametersSet={newParametersSet}\n          />\n        ))}\n      </TabContext>\n\n      <DialogActions>\n        <Button onClick={() => setIsOpenDialog(false)} color=\"secondary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ParameterAssignValuesDialog;\n"]},"metadata":{},"sourceType":"module"}